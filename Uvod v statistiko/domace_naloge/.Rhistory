pbinom(10, 12, 0.5, lower.tail = FALSE)
pbinom(61, 100, 0.5, lower.tail = FALSE)
binom.test(11, 12, alternative="greater", p=0.5)
binom.test(61, 100, alternative="greater", p=0.5)
binom.test(601, 100, alternative="greater", p=0.5)
binom.test(60, 100, alternative="greater", p=0.5)
binom.test(62, 100, alternative="greater", p=0.5)
binom.test(61, 100, alternative="greater", p=0.5)
?read.table
data_full <- read.table("Ankete1011.txt", sep="\t", header=TRUE, dec=",")
View(data_full)
# Chunk 1
# set this option in the first code chunk in the document
knitr::opts_chunk$set(echo = params$printcode, results= params$printresults, warning = FALSE)
# libraries
library(tidyverse)
library(lubridate)
# setting options for easier number viewing
options(scipen=9999)
# Chunk 2
qbinom(0.05, 100, 0.5, lower.tail=FALSE)
# Chunk 3
pbinom(60, 100, 0.5, lower.tail = FALSE)
data_full <- read.table("Ankete1011.txt", sep="\t", header=TRUE, dec=",")
data_full <- tibble(data_full)
data_full$Timestamp <- parse_date_time(data_full$Timestamp, c("dmY HM", "mdY HMS"))
data_full$Spol[data_full$Spol == "zenski"] <- "F"
data_full$Spol[data_full$Spol == "moski"] <- "M"
data_full$Visina <- as.numeric(gsub(",", ".", data_full$Visina))
data_full$Teza <- as.numeric(gsub(",", ".", data_full$Teza))
data_full$Cevelj <- as.numeric(gsub(",", ".", data_full$Cevelj))
data_full$Kajenje[data_full$Kajenje == "ne"] <- "N"
data_full$Kajenje[data_full$Kajenje == "da"] <- "Y"
data_full$Kajenje_koliko <- as.numeric(data_full$Kajenje_koliko)
data_full$Igrice[data_full$Igrice == "ne"] <- "N"
data_full$Igrice[data_full$Igrice == "da"] <- "Y"
data_full$Televizija <- as.numeric(gsub(",", ".", data_full$Televizija))
data_full$Knjige <- as.numeric(gsub(",", ".", data_full$Knjige))
data_full$Sport <- as.numeric(gsub(",", ".", data_full$Sport))
# checking rows with NA values
print(data_full[rowSums(is.na(data_full)) > 0, ], width=Inf)
# imputing missing values with median
data_full$Knjige[is.na(data_full$Knjige)] <- median(data_full$Knjige, na.rm=TRUE)
summary(data_full)
table(data_full$Fakulteta)
table(data_full$Studij)
data_vet <- data_full %>%
filter(Studij=="Veterina")
?read.table
t.test(data_vet$Sport, data_vet$Televizija, alternative = "two.sided")
?t.test
t.test(data_vet$Sport, data_vet$Televizija, paired=TRUE)
hist(data_vet$Sport-data_vet$Televizija)
hist(data_vet$Sport-data_vet$Televizija, nclass=20)
nrow(data_vet)
_ks.test
?Å¾ks.test
?ks.test
ks.test(data_vet$Sport-data_vet$Televizija, "pnorm")
_pnorm
?pnorm
install.packages('nortest')
library(nortest)
ad.test(data_vet$Sport-data_vet$Televizija)
?ad.test
data_vet
ad.test(data_vet$Televizija[data_vet$Kajenje=="Y"])
data_vet$Televizija[data_vet$Kajenje=="Y"]
data_vet$Televizija[data_vet$Kajenje=="N"]
ad.test(data_vet$Televizija[data_vet$Kajenje=="N"])
hist(data_vet$Televizija[data_vet$Kajenje=="N"])
hist(data_vet$Televizija[data_vet$Kajenje=="N"], nclass=20)
hist(data_vet$Televizija[data_vet$Kajenje=="Y"], nclass=20)
median(data_vet$Televizija[data_vet$Kajenje=="Y")
median(data_vet$Televizija[data_vet$Kajenje=="Y"])
mean(data_vet$Televizija[data_vet$Kajenje=="Y"])
mean(data_vet$Televizija[data_vet$Kajenje=="N"])
median(data_vet$Televizija[data_vet$Kajenje=="N"])
wilcox.test(data_vet$Televizija ~ data_vet$Kajenje, paired = FALSE)
wilcox.test(data_vet$Televizija ~ data_vet$Kajenje, paired = TRUE)
wilcox.test(data_vet$Televizija ~ data_vet$Kajenje, paired = FALSE)
6000/11200
5200/11200
6/8
cramer_coef <- function(a, b, c, d){
return((a*d-b*c)/sqrt((a+b)*(c+d)*(a+c)*(b+d)))
}
cramer_coef(60, 40, 40, 60)
cramer_coef(6, 4, 4, 6)
cramer_coef(6000, 5200, 4000, 4800)
cramer_coef(6, 2, 4, 8)
hist)data_vet$Sport - data_vet$Televizija=
hist(data_vet$Sport - data_vet$Televizija)
hist(data_vet$Sport - data_vet$Televizija, nclass=20)
shapiro.test(data_vet$Sport - data_vet$Televizija)
?shapiro.test
t.test(data_vet$Televizija ~ data_vet$Kajenje, paired=FALSE, var.equal=TRUE)
t.test(data_vet$Televizija ~ data_vet$Kajenje, paired=FALSE, var.equal=FALSE)
ad.test(data_vet$Televizija[data_vet$Kajenje == "Y"])
ad.test(data_vet$Televizija[data_vet$Kajenje == "N"])
shapiro.test(data_vet$Televizija[data_vet$Kajenje == "Y"])
shapiro.test(data_vet$Televizija[data_vet$Kajenje == "N"])
wilcox.test(data_vet$Televizija ~ data_vet$Kajenje, paired=FALSE)
wilcox.test(data_vet$Internet ~ data_vet$Spol, paired=FALSE)
t.test(data_vet$Sport, data_vet$Televizija, paired=TRUE)
