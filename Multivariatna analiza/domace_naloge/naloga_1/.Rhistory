for (i in 1:length(Sch)) {
# Rekodiranje
podatki[, Sch[i]] <- Recode(podatki[, Sch[i]], "
'Very much like me' = 6;
'Like me' = 5;
'Somewhat like me' = 4;
'A little like me' = 3;
'Not like me' = 2;
'Not like me at all' = 1
")
# Pretvorba iz ordinalne (factor) v numerično spremenljivko.
podatki[, Sch[i]] <- as.numeric(as.character(podatki[, Sch[i]]))
}
# Pogledamo rekodirane podatke.
# head(podatki[, Sch])
# Pogledamo še vsebinske spremenljivke.
# Skewness meri asimetrijo in kurtosis meri sploščenost.
# Velja, da če je abolustna vrednost manjša od 1, spremenljivka odstopa od normalne porazdelitve.
# Sploščenost: koničavost > 0 in sploščenost < 0.
povzetek <- as.data.frame(psych::describe(podatki[, Sch]))
kable(round(povzetek[, c(2, 3, 4, 5, 8, 9, 10, 11, 12)], 2),
caption="Deskriptivne statistike vsebinskih spremenljivk") %>%
kable_styling(full_width = TRUE, latex_options="hold_position")
# Histogram vsebinskih spremenljivk
par(mfrow = c(4, 3))
for (i in 1:length(Sch)) {
histNorm(podatki[, Sch[i]],
breaks = 0:6 + 0.5,
main = Sch[i],
xlab = "strinjanje",
ylab = "Frekvenca",
ylim = c(1, 600))
}
# ANALIZA POVEZANOSTI spremenljivk o vrednotah
# Izračun korelacij med spremenljivkami.
cor(podatki[,Sch], use="complete.obs")
# Delež upoštevanih enot tj. delež enot, ki imajo vse spremenljivke
mean(complete.cases(podatki[, Sch]))
# Izračun pearsonovega koeficienta korelacije
R.p <- cor(podatki[, Sch], use = "complete.obs", method = "pearson")
# Skupaj damo tiste spremenljivke, za katere glede na korelacije izgleda da pašejo skupaj.
vrstni.red <- c(1,3,4,6,10,5,8,9,2,7,11,12)
plot.mat(R.p[vrstni.red, vrstni.red], main=" ")
# Izračunamo povprečja strinjanja za prvo spremenljivko o opravičljivosti glede na nadzor.
# (describeBy(podatki[, Sch], podatki[, "Nadzor"],  mat = TRUE)[,-c(1, 3, 8, 9)])
# Povezanost spremenljivk o opravičiljivosti z nominalnimi spremenljivkami predstavimo grafično.
# par(mfrow = c(1, 2), oma = c(5, 2, 1, 1))
plotMeans(x = podatki[, Sch[vrstni.red]], by = podatki$Nadzor, xlab = "", ylab="Povprečje", ylim = c(2.8, 6.2), cex.axis=0.7)
plotMeans(x = podatki[, Sch[vrstni.red]], by = podatki$Razmerje, xlab = "", ylab="Povprečje", ylim = c(2.8, 6.2), cex.axis=0.7)
korelacije <- data.frame(
cor(podatki[, Sch], as.numeric(podatki[, "Prebivalisce"]), method = "spearman", use = "com"),
cor(podatki[, Sch], podatki[, "Zaposlitev"], method = "pearson", use = "com"))
rownames(korelacije) <- Sch
colnames(korelacije) <- c("Prebivališče (Spearman)", "Leto prve zaposlitve (Pearson)")
kable(round(korelacije, 2), caption="Povezanost med vsebinskimi spr. in Prebivališčem ter Zaposlitivjo") %>%
kable_styling(full_width = TRUE, latex_options="hold_position")
# Združimo spremenljivke, ki naj bi merile isto stvar.
odprtost <- c("drugačnost", "užitek", "vznemerljivost", "zabava", "kreativnost", "svoboda")
konservativnost  <- c("obramba", "tradicija", "varnost", "ponižnost", "ubogljivost", "sprejemljivost")
# Izračunamo povprečja odgovorov po posameznih sklopih spremenljivk, pri čemer upoštevamo razpoložljive vrednosti.
podatki$odprtost <- rowMeans(x=podatki[, odprtost], na.rm=TRUE)
podatki$konservativnost <- rowMeans(x=podatki[, konservativnost], na.rm=TRUE)
# Poglejmo porazdelitvi teh dveh spremenljivk.
OpisLikert <- as.data.frame(psych::describe(podatki[, c("odprtost","konservativnost")]))
kable(round(OpisLikert[, c(2, 3, 4, 5, 8, 9, 10, 11, 12)], 2), caption="Deskriptivne statistike Likertovih spremenljivk") %>%
kable_styling(full_width=F, latex_options="hold_position")
par(mfrow = c(1, 2))
histNorm(podatki$odprtost, xlim = c(1, 6), main = "Porazdelitev odprtosti", xlab = "Strinjanje", ylab = "Frekvenca")
histNorm(podatki$konservativnost, xlim = c(1, 6), main = "Porazdelitev konservativnosti", xlab = "Strinjanje", ylab = "Frekvenca")
# Preverimo domnevo o enakosti povprečij.
t <- t.test(x = podatki$konservativnost, y = podatki$odprtost, paired = TRUE)
tmp <- apply(podatki[, c("odprtost", "konservativnost")], 2, jitter, amount = 0.07)
plot(tmp[,1], tmp[,2], ylim = c(1, 6), xlim = c(1, 6), xlab = "Odprtost", ylab = "Konservativnost")
cor.test(x=podatki$odprtost, y=podatki$konservativnost)
# par(mfrow=c(1,2))
plot(podatki$Zaposlitev, jitter(podatki$odprtost, amount = 0.05), xlab = "Leto prve zaposlitve", ylab = "Odprtost")
plot(podatki$Zaposlitev, jitter(podatki$konservativnost, amount = 0.05), xlab = "Leto prve zaposlitve", ylab = "Konservativnost")
cor.test(podatki$Zaposlitev, podatki$odprtost, use = "compl")
cor.test(podatki$Zaposlitev, podatki$konservativnost, use = "compl")
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE, results = FALSE,
fig.show = FALSE, fig.width=6, fig.height=4)
# Uvozimo potrebne knjižnice.
library("car")
library("blockmodeling")
library("foreign")
library("psych")
library("multiUS")
library("ggplot2")
library("knitr")
library("kableExtra")
library("dplyr")
library("gridExtra")
# Uvozimo podatke.
podatkiVseDrzave <- read.spss("ESS9e03.sav",
use.value.labels = TRUE,
to.data.frame = TRUE,
use.missings = TRUE,
reencode = TRUE)
# Izberemo državo, ki jo bomo obravnavali - Danska.
podatki <- podatkiVseDrzave[podatkiVseDrzave$cntry == "Denmark",]
rm(podatkiVseDrzave)
# Pogledamo kaj vse vsebuje kodirni list.
#names(attributes(podatki))
#attributes(podatki)$names #imena spremenljivk
#attributes(podatki)$variable.labels #opis spremenljivk
# Posebej shranimo opise spremenljivk.
varLabs <- attributes(podatki)$variable.labels
# Odgovoren za nadzorovanje nad drugimi delavci - nominalna z dvema kategorijama.
S1 <- table(podatki$jbspv)
# Delovno razmerje - nominalna spremenljivka s 3 kategorijami
S2 <- table(podatki$wrkctra)
# Velikost domačega kraja - odrinalna, ki ni Likertova s petimi kategorijami s petimi vrednostmi.
S3 <- table(podatki$domicil)
# Leto v katerem si se prvič zaposlil ali postal vajenec - številska z veliko različnimi vrednostmi.
S4 <- table(podatki$pdempyr)
# Izberemo spremenljivke in jih shranimo ter preimenujemo.
catVarsEn <- c("jbspv","domicil","wrkctra","pdempyr")
catVars <- c("Nadzor","Prebivališče","Razmerje","Leto")
# Spremenimo leto prve zaposlitve v številsko.
podatki$year <- as.numeric(as.character(podatki$pdempyr))
# Nadzor (nominalna z dvema kategorijama)
podatki$Nadzor <- Recode(podatki$jbspv, " 'Yes' = 'Da'; 'No'='Ne' ")
kable(t(freqTab(podatki$Nadzor, cum=FALSE)), caption="Tabelarni prikaz spr. Nadzor") %>%
kable_styling(full_width=F, latex_options="hold_position")
barplot(table(podatki$Nadzor),
xlab="Nadzor", ylab="Frekvenca")
# Razmerje (nominalna)
podatki$Razmerje <- Recode(podatki$wrkctra, " 'Unlimited' = 'Nedoločen čas'; 'Limited'= 'Določen čas'; 'No contract'='Brez pogodbe' ")
podatki$Razmerje <- factor(podatki$Razmerje, levels=c("Nedoločen čas", "Določen čas", "Brez pogodbe"))
kable(t(freqTab(podatki$Razmerje, cum=FALSE)), caption="Tabelarni prikaz spr. Razmerje") %>%
kable_styling(full_width=F, latex_options="hold_position")
barplot(table(podatki$Razmerje),
xlab="Delovno razmerje", ylab="Frekvenca")
# Prebivališče (ordinalna s petimi kategorijami)
podatki$Prebivalisce <- Recode(podatki$domicil, " 'A big city' = 'Veliko mesto'; 'Suburbs or outskirts of big city'='Predmestje'; 'Town or small city'='Manjše mesto'; 'Country village'='Vas'; 'Farm or home in countryside'='Podeželje' ")
podatki$Prebivalisce <- factor(podatki$Prebivalisce, levels=c("Veliko mesto","Predmestje","Manjše mesto","Vas","Podeželje"))
kable(t(freqTab(podatki$Prebivalisce, cum=FALSE)), caption="Tabelarni prikaz spr. Prebivališče") %>%
kable_styling(full_width=F, latex_options="hold_position")
barplot(table(podatki$Prebivalisce),
xlab="Prebivališče", ylab="Frekvenca")
# Zaposlitev (številska spremenljivka)
podatki$Zaposlitev <- podatki$year
povzetek <- as.data.frame(psych::describe(podatki[, "Zaposlitev"]))
rownames(povzetek) <- c("Zaposlitev")
kable(round(povzetek[, c(2, 3, 4, 5, 8, 9, 10)], 2), caption="Deskriptivne statistike spr. Zaposlitev") %>%
kable_styling(full_width=F, latex_options="hold_position")
hist(podatki$Zaposlitev,
xlab="Leto Zaposlitve", ylab="Frekvenca", main="", breaks=30, freq=TRUE)
# Izberemo vsebinske spremenljivke.
SchEn <- c("impdiff", "impsafe", "impfun",  "ipadvnt", "impfree", "ipgdtim",
"ipmodst", "ipstrgv", "imptrad", "ipcrtiv", "ipfrule", "ipbhprp")
# Preimenujemo jih v slovenska imena.
Sch <- c("drugačnost", "varnost", "užitek", "vznemerljivost", "svoboda",
"zabava", "ponižnost", "obramba", "tradicija", "kreativnost",
"ubogljivost", "sprejemljivost")
for (i in 1:length(SchEn)) {
colnames(podatki)[which(colnames(podatki) %in% SchEn[i])] <- Sch[i]
}
# Pogledamo podatke vsebinskih spremenljivk.
head(podatki[, Sch])
# Ker bomo vrednosti vsebinskih spremenljivk uporabljali kot številske (podrobneje intervalne) jih rekodiramo in obrnemo lestvico.
for (i in 1:length(Sch)) {
# Rekodiranje
podatki[, Sch[i]] <- Recode(podatki[, Sch[i]], "
'Very much like me' = 6;
'Like me' = 5;
'Somewhat like me' = 4;
'A little like me' = 3;
'Not like me' = 2;
'Not like me at all' = 1
")
# Pretvorba iz ordinalne (factor) v numerično spremenljivko.
podatki[, Sch[i]] <- as.numeric(as.character(podatki[, Sch[i]]))
}
# Pogledamo rekodirane podatke.
# head(podatki[, Sch])
# Pogledamo še vsebinske spremenljivke.
# Skewness meri asimetrijo in kurtosis meri sploščenost.
# Velja, da če je abolustna vrednost manjša od 1, spremenljivka odstopa od normalne porazdelitve.
# Sploščenost: koničavost > 0 in sploščenost < 0.
povzetek <- as.data.frame(psych::describe(podatki[, Sch]))
kable(round(povzetek[, c(2, 3, 4, 5, 8, 9, 10, 11, 12)], 2),
caption="Deskriptivne statistike vsebinskih spremenljivk") %>%
kable_styling(full_width = TRUE, latex_options="hold_position")
# Histogram vsebinskih spremenljivk
par(mfrow = c(4, 3))
for (i in 1:length(Sch)) {
histNorm(podatki[, Sch[i]],
breaks = 0:6 + 0.5,
main = Sch[i],
xlab = "strinjanje",
ylab = "Frekvenca",
ylim = c(1, 600))
}
# ANALIZA POVEZANOSTI spremenljivk o vrednotah
# Izračun korelacij med spremenljivkami.
cor(podatki[,Sch], use="complete.obs")
# Delež upoštevanih enot tj. delež enot, ki imajo vse spremenljivke
mean(complete.cases(podatki[, Sch]))
# Izračun pearsonovega koeficienta korelacije
R.p <- cor(podatki[, Sch], use = "complete.obs", method = "pearson")
# Skupaj damo tiste spremenljivke, za katere glede na korelacije izgleda da pašejo skupaj.
vrstni.red <- c(1,3,4,6,10,5,8,9,2,7,11,12)
plot.mat(R.p[vrstni.red, vrstni.red], main=" ")
# Izračunamo povprečja strinjanja za prvo spremenljivko o opravičljivosti glede na nadzor.
# (describeBy(podatki[, Sch], podatki[, "Nadzor"],  mat = TRUE)[,-c(1, 3, 8, 9)])
# Povezanost spremenljivk o opravičiljivosti z nominalnimi spremenljivkami predstavimo grafično.
# par(mfrow = c(1, 2), oma = c(5, 2, 1, 1))
plotMeans(x = podatki[, Sch[vrstni.red]], by = podatki$Nadzor, xlab = "", ylab="Povprečje", ylim = c(2.8, 6.2), cex.axis=0.7)
plotMeans(x = podatki[, Sch[vrstni.red]], by = podatki$Razmerje, xlab = "", ylab="Povprečje", ylim = c(2.8, 6.2), cex.axis=0.7)
korelacije <- data.frame(
cor(podatki[, Sch], as.numeric(podatki[, "Prebivalisce"]), method = "spearman", use = "com"),
cor(podatki[, Sch], podatki[, "Zaposlitev"], method = "pearson", use = "com"))
rownames(korelacije) <- Sch
colnames(korelacije) <- c("Prebivališče (Spearman)", "Leto prve zaposlitve (Pearson)")
kable(round(korelacije, 2), caption="Povezanost med vsebinskimi spr. in Prebivališčem ter Zaposlitivjo") %>%
kable_styling(full_width = TRUE, latex_options="hold_position")
# Združimo spremenljivke, ki naj bi merile isto stvar.
odprtost <- c("drugačnost", "užitek", "vznemerljivost", "zabava", "kreativnost", "svoboda")
konservativnost  <- c("obramba", "tradicija", "varnost", "ponižnost", "ubogljivost", "sprejemljivost")
# Izračunamo povprečja odgovorov po posameznih sklopih spremenljivk, pri čemer upoštevamo razpoložljive vrednosti.
podatki$odprtost <- rowMeans(x=podatki[, odprtost], na.rm=TRUE)
podatki$konservativnost <- rowMeans(x=podatki[, konservativnost], na.rm=TRUE)
# Poglejmo porazdelitvi teh dveh spremenljivk.
OpisLikert <- as.data.frame(psych::describe(podatki[, c("odprtost","konservativnost")]))
kable(round(OpisLikert[, c(2, 3, 4, 5, 8, 9, 10, 11, 12)], 2), caption="Deskriptivne statistike Likertovih spremenljivk") %>%
kable_styling(full_width=F, latex_options="hold_position")
par(mfrow = c(1, 2))
histNorm(podatki$odprtost, xlim = c(1, 6), main = "Porazdelitev odprtosti", xlab = "Strinjanje", ylab = "Frekvenca")
histNorm(podatki$konservativnost, xlim = c(1, 6), main = "Porazdelitev konservativnosti", xlab = "Strinjanje", ylab = "Frekvenca")
# Preverimo domnevo o enakosti povprečij.
t <- t.test(x = podatki$konservativnost, y = podatki$odprtost, paired = TRUE)
tmp <- apply(podatki[, c("odprtost", "konservativnost")], 2, jitter, amount = 0.07)
plot(tmp[,1], tmp[,2], ylim = c(1, 6), xlim = c(1, 6), xlab = "Odprtost", ylab = "Konservativnost")
cor.test(x=podatki$odprtost, y=podatki$konservativnost)
# par(mfrow=c(1,2))
plot(podatki$Zaposlitev, jitter(podatki$odprtost, amount = 0.05), xlab = "Leto prve zaposlitve", ylab = "Odprtost")
plot(podatki$Zaposlitev, jitter(podatki$konservativnost, amount = 0.05), xlab = "Leto prve zaposlitve", ylab = "Konservativnost")
cor.test(podatki$Zaposlitev, podatki$odprtost, use = "compl")
cor.test(podatki$Zaposlitev, podatki$konservativnost, use = "compl")
par(mfrow = c(1,2), mar = c(11, 5, 2, 2))
# kako odstranit gap med captionom in figurama???
plotmeans(odprtost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
plotmeans(konservativnost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
t.test(podatki$odprtost ~ podatki$Nadzor)
t.test(podatki$konservativnost ~ podatki$Nadzor)
par(mfrow = c(1,2), mar = c(11, 5, 2, 2))
plotmeans(odprtost ~ Razmerje,
data = podatki,
ylab = "Povprečje",
xlab = "",
las = 2,
ylim = c(1, 6))
plotmeans(konservativnost ~ Razmerje,
data = podatki,
ylab = "Povprečje",
xlab = "",
las = 2,
ylim = c(1, 6),
lwd=2)
leveneTest(y=podatki$odprtost, group=podatki$Razmerje)
oneway.test(podatki$odprtost ~ podatki$Razmerje, var.equal = TRUE)
leveneTest(y = podatki$konservativnost, group=podatki$Razmerje)
oneway.test(podatki$konservativnost ~ podatki$Razmerje, var.equal = TRUE)
par(mfrow = c(1,2), mar = c(11, 5, 2, 2))
plotmeans(odprtost ~ Prebivalisce,
data = podatki,
ylab = "Povprečje",
xlab = "",
las = 2,
ylim = c(1, 6),
lwd=2)
plotmeans(konservativnost ~ Prebivalisce,
data = podatki,
ylab = "Povprečje",
xlab = "",
las = 2,
ylim = c(1, 6),
lwd=2)
cor.test(podatki$odprtost, as.numeric(podatki$Prebivalisce), method = "spearman", use = "com")
cor.test(podatki$konservativnost, as.numeric(podatki$Prebivalisce), method = "spearman", use = "com")
# Izberemo spremenljivko
var <- "Nadzor"
imena_spremenljivk <- c("odprtost", "konservativnost")
# Izračunamo centroide po nadzoru
agg <- aggregate(podatki[, imena_spremenljivk], by=list(podatki[, var]), FUN=mean, na.rm = TRUE)
tmp <- apply(podatki[, imena_spremenljivk], 2, jitter, amount=0.07)
joint <- rbind(tmp, agg[, -1])
plot(joint,
xlab = "odprtost",
ylab = "konservativnost",
pch = 16,
ylim = c(1, 6),
xlim = c(1, 6),
# nastavimo velikost pik
cex = c(rep(0.5, nrow(tmp)), rep(2, nrow(agg))),
# pike pobarvamo glede na skupino Nadzora
col=c(podatki[, var], agg[,1]))
# dodamo legendo
par(xpd=TRUE)
legend("topleft", legend = agg[,1], pch = 16, col = 1:nrow(agg))
# Izberemo spremenljivko
var <- "Razmerje"
imena_spremenljivk <- c("odprtost", "konservativnost")
# Izračunamo centroide po nadzoru
agg <- aggregate(podatki[, imena_spremenljivk], by=list(podatki[, var]), FUN=mean, na.rm = TRUE)
tmp <- apply(podatki[, imena_spremenljivk], 2, jitter, amount=0.07)
joint <- rbind(tmp, agg[, -1])
plot(joint,
xlab = "odprtost",
ylab = "konservativnost",
pch = 16,
ylim = c(1, 6),
xlim = c(1, 6),
# nastavimo velikost pik
cex = c(rep(0.5, nrow(tmp)), rep(2, nrow(agg))),
# pike pobarvamo glede na skupino Nadzora
col=c(podatki[, var], agg[,1]))
# dodamo legendo
par(xpd=TRUE)
legend("bottomleft", legend = agg[,1], pch = 16, col = 1:nrow(agg))
# par(mfrow = c(1,2), mar = c(11, 5, 2, 2))
# kako odstranit gap med captionom in figurama???
plotmeans(odprtost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
par(mfrow = c(1,2), mar = c(11, 5, 2, 2))
# kako odstranit gap med captionom in figurama???
plotmeans(odprtost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
plotmeans(konservativnost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
par(mfrow = c(1,2), mar = c(11, 5, 2, 2))
# kako odstranit gap med captionom in figurama???
plotmeans(odprtost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
plotmeans(konservativnost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
par(mfrow = c(1,2), mar = c(7, 5, 2, 2))
# kako odstranit gap med captionom in figurama???
plotmeans(odprtost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
plotmeans(konservativnost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
t.test(podatki$odprtost ~ podatki$Nadzor)
t.test(podatki$konservativnost ~ podatki$Nadzor)
par(mfrow = c(1,2), mar = c(6, 5, 2, 2))
# kako odstranit gap med captionom in figurama???
plotmeans(odprtost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
plotmeans(konservativnost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
t.test(podatki$odprtost ~ podatki$Nadzor)
t.test(podatki$konservativnost ~ podatki$Nadzor)
par(mfrow = c(1,2), mar = c(5, 5, 2, 2))
# kako odstranit gap med captionom in figurama???
plotmeans(odprtost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
plotmeans(konservativnost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
t.test(podatki$odprtost ~ podatki$Nadzor)
t.test(podatki$konservativnost ~ podatki$Nadzor)
par(mfrow = c(1,2), mar = c(3, 5, 2, 2))
# kako odstranit gap med captionom in figurama???
plotmeans(odprtost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
plotmeans(konservativnost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
t.test(podatki$odprtost ~ podatki$Nadzor)
t.test(podatki$konservativnost ~ podatki$Nadzor)
par(mfrow = c(1,2), mar = c(4, 5, 2, 2))
# kako odstranit gap med captionom in figurama???
plotmeans(odprtost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
plotmeans(konservativnost ~ Nadzor,
data = podatki,
ylab = "Povprečje",
xlab = "",
ylim = c(1, 6))
t.test(podatki$odprtost ~ podatki$Nadzor)
t.test(podatki$konservativnost ~ podatki$Nadzor)
plot(c(1,2,3,4))
plot(c(1,2,3,4), mar = c(4, 5, 2, 2))
plot(c(1,2,3,4), mar = c(40, 5, 2, 2))
par(mar=c(5,4,4,2) + 0.1)
plotMeans(x = podatki[, Sch[vrstni.red]], by = podatki$Razmerje, xlab = "", ylab="Povprečje", ylim = c(2.8, 6.2)
# , cex.axis=0.7
)
par(mar=c(1,1,1,1) + 0.1)
plotMeans(x = podatki[, Sch[vrstni.red]], by = podatki$Razmerje, xlab = "", ylab="Povprečje", ylim = c(2.8, 6.2))
par(mar=c(4,4,2,2) + 0.1)
plotMeans(x = podatki[, Sch[vrstni.red]], by = podatki$Razmerje, xlab = "", ylab="Povprečje", ylim = c(2.8, 6.2))
par(mar=c(6,5,2,2) + 0.1)
plotMeans(x = podatki[, Sch[vrstni.red]], by = podatki$Razmerje, xlab = "", ylab="Povprečje", ylim = c(2.8, 6.2))
par(mar=c(7,5,2,2) + 0.1)
plotMeans(x = podatki[, Sch[vrstni.red]], by = podatki$Razmerje, xlab = "", ylab="Povprečje", ylim = c(2.8, 6.2))
# Izračunamo povprečja strinjanja za prvo spremenljivko o opravičljivosti glede na nadzor.
# (describeBy(podatki[, Sch], podatki[, "Nadzor"],  mat = TRUE)[,-c(1, 3, 8, 9)])
# Povezanost spremenljivk o opravičiljivosti z nominalnimi spremenljivkami predstavimo grafično.
# par(mfrow = c(1, 2), oma = c(5, 2, 1, 1))
par(mar=c(7,5,2,2) + 0.1)
plotMeans(x = podatki[, Sch[vrstni.red]], by = podatki$Nadzor, xlab = "", ylab="Povprečje", ylim = c(2.8, 6.2))
par(mfrow = c(1,2), mar = c(8, 5, 2, 2))
plotmeans(odprtost ~ Razmerje,
data = podatki,
ylab = "Povprečje",
xlab = "",
las = 2,
ylim = c(1, 6))
plotmeans(konservativnost ~ Razmerje,
data = podatki,
ylab = "Povprečje",
xlab = "",
las = 2,
ylim = c(1, 6),
lwd=2)
leveneTest(y=podatki$odprtost, group=podatki$Razmerje)
oneway.test(podatki$odprtost ~ podatki$Razmerje, var.equal = TRUE)
leveneTest(y = podatki$konservativnost, group=podatki$Razmerje)
oneway.test(podatki$konservativnost ~ podatki$Razmerje, var.equal = TRUE)
par(mfrow = c(1,2), mar = c(8, 5, 2, 2))
plotmeans(odprtost ~ Prebivalisce,
data = podatki,
ylab = "Povprečje",
xlab = "",
las = 2,
ylim = c(1, 6),
lwd=2)
plotmeans(konservativnost ~ Prebivalisce,
data = podatki,
ylab = "Povprečje",
xlab = "",
las = 2,
ylim = c(1, 6),
lwd=2)
cor.test(podatki$odprtost, as.numeric(podatki$Prebivalisce), method = "spearman", use = "com")
cor.test(podatki$konservativnost, as.numeric(podatki$Prebivalisce), method = "spearman", use = "com")
par(mfrow = c(1,2), mar = c(8, 5, 2, 2))
plotmeans(odprtost ~ Razmerje,
data = podatki,
ylab = "Povprečje",
xlab = "",
las = 2,
ylim = c(1, 6))
plotmeans(konservativnost ~ Razmerje,
data = podatki,
ylab = "Povprečje",
xlab = "",
las = 2,
ylim = c(1, 6),
lwd=2)
leveneTest(y=podatki$odprtost, group=podatki$Razmerje)
oneway.test(podatki$odprtost ~ podatki$Razmerje, var.equal = TRUE)
leveneTest(y = podatki$konservativnost, group=podatki$Razmerje)
oneway.test(podatki$konservativnost ~ podatki$Razmerje, var.equal = TRUE)
asdf <- oneway.test(podatki$odprtost ~ podatki$Razmerje, var.equal = TRUE)
View(asdf)
podatki$odprtost
aggregate(podatki$odprtost, list(podatki$Razmerje), FUN=mean)
aggregate(podatki$odprtost, list(podatki$Razmerje), FUN=mean, na.rm=TRUE)
4.468202 - 4.261534
aggregate(podatki$konservativnost, list(podatki$Razmerje), FUN=mean, na.rm=TRUE)
4.426791 - 4.164912
