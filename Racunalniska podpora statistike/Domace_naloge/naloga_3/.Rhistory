df_simple_n <- filter(df_simple_n, date > (max(date) - ddays(n)))
# select only required columns
df_simple <- select(df_full, date, tests.performed, cases.confirmed)
# convert dates from character to datetime
df_simple$date <- parse_date_time(df_simple$date, c("Ymd"))
df_simple$date <- as.Date(df_simple$date)
# add a column day_in_week which converts dates into numbers from 1-7
# 1 is Sunday, 2 is monday, ...
df_simple <- mutate(df_simple, day_in_week = wday(date))
# recode changes numerical values to what we want to have in the plot.
df_simple$day_in_week <- recode(df_simple$day_in_week,
`1` = "N",
`2` = "Po",
`3` = "T",
`4` = "Sr",
`5` = "C",
`6` = "P",
`7` = "S")
df_simple <- mutate(df_simple, day_color = if_else(day_in_week == "N", 1, 0, NA_real_))
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
df_simple_n <- filter(df_simple_n, date > (max(date) - ddays(n)))
max(df_simple_n$date) - ddays(20)
df_simple_n$date > (max(df_simple_n$date) - ddays(20))
df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(20)),]
df_simple_n <- filter(df_simple_n, date > (max(date) - ddays(n)))
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(20)), ]
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
df_simple_n$day_color <- factor(df_simple_n$day_color)
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
g + geom_bar(stat="Identity", color="black") +
ylab("potrjeni primeri") +
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
scale_x_date(date_breaks="1 day", labels=df_simple_n$day_in_week) +
theme(axis.title.x = element_blank()) +
theme_bw()
df_simple_n
narisi <- function(n) {
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(20)), ]
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
df_simple_n$day_color <- factor(df_simple_n$day_color)
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
g + geom_bar(stat="Identity", color="black") +
ylab("potrjeni primeri") +
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
scale_x_date(date_breaks="1 day") +
theme(axis.title.x = element_blank()) +
theme_bw()
}
narisi(20)
narisi <- function(n) {
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(20)), ]
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
df_simple_n$day_color <- factor(df_simple_n$day_color)
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
g + geom_bar(stat="Identity", color="black") +
ylab("potrjeni primeri") +
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
scale_x_date(breaks=df_simple_n$date, labels=df_simple_n$day_in_week) +
theme(axis.title.x = element_blank()) +
theme_bw()
}
narisi(20)
narisi <- function(n) {
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(20)), ]
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
df_simple_n$day_color <- factor(df_simple_n$day_color)
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
g + geom_bar(stat="Identity", color="black") +
ylab("potrjeni primeri") +
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
scale_x_date(breaks=df_simple_n$date,
labels=df_simple_n$day_in_week,
minor_breaks="2 days") +
theme(axis.title.x = element_blank()) +
theme_bw()
}
narisi(20)
narisi <- function(n) {
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(20)), ]
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
df_simple_n$day_color <- factor(df_simple_n$day_color)
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
g + geom_bar(stat="Identity", color="black") +
ylab("potrjeni primeri") +
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
scale_x_date(breaks=df_simple_n$date,
labels=df_simple_n$day_in_week,
minor_breaks="3 days") +
theme(axis.title.x = element_blank()) +
theme_bw()
}
narisi(20)
narisi <- function(n) {
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(20)), ]
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
df_simple_n$day_color <- factor(df_simple_n$day_color)
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
g + geom_bar(stat="Identity", color="black") +
ylab("potrjeni primeri") +
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
scale_x_date(breaks=df_simple_n$date,
labels=df_simple_n$day_in_week,
minor_breaks="1 week") +
theme(axis.title.x = element_blank()) +
theme_bw()
}
narisi(20)
narisi <- function(n) {
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(20)), ]
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
df_simple_n$day_color <- factor(df_simple_n$day_color)
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
g + geom_bar(stat="Identity", color="black") +
ylab("potrjeni primeri") +
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
scale_x_date(breaks=df_simple_n$date,
labels=df_simple_n$day_in_week,
minor_breaks="1 day") +
theme(axis.title.x = element_blank()) +
theme_bw()
}
narisi(20)
narisi <- function(n) {
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(20)), ]
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
df_simple_n$day_color <- factor(df_simple_n$day_color)
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
g + geom_bar(stat="Identity", color="black") +
ylab("potrjeni primeri") +
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
theme(axis.title.x = element_blank()) +
scale_x_date(breaks=df_simple_n$date,
labels=df_simple_n$day_in_week,
minor_breaks="1 day") +
theme_bw()
}
narisi(20)
narisi <- function(n) {
df_simple_n <- filter(df_simple, !is.na("cases.confirmed"))
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(20)), ]
df_simple_n <- mutate(df_simple_n,
day_color = if_else("cases.confirmed" == max("cases.confirmed"),
2,
day_color)
)
df_simple_n$day_color <- factor(df_simple_n$day_color)
g <- ggplot(df_simple_n, aes(x=date, y="cases.confirmed", fill=day_color))
g + geom_bar(stat="Identity", color="black") +
ylab("potrjeni primeri") +
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
theme(axis.title.x = element_blank()) +
scale_x_date(breaks=df_simple_n$date,
labels=df_simple_n$day_in_week,
minor_breaks="1 day") +
theme_bw()
}
narisi(20)
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(20)), ]
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
df_simple_n$day_color <- factor(df_simple_n$day_color)
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
g + geom_bar(stat="Identity", color="black") +
ylab("potrjeni primeri") +
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
scale_x_date(breaks=df_simple_n$date,
labels=df_simple_n$day_in_week,
minor_breaks="1 day") +
theme(axis.title.x = element_blank()) +
theme_bw()
narisi <- function(n) {
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(n)), ]
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
df_simple_n$day_color <- factor(df_simple_n$day_color)
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
g + geom_bar(stat="Identity", color="black") +
ylab("potrjeni primeri") +
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
scale_x_date(breaks=df_simple_n$date,
labels=df_simple_n$day_in_week,
minor_breaks="1 day") +
theme(axis.title.x = element_blank()) +
theme_bw()
}
narisi(20)
narisi(10)
narisi(11)
narisi(12)
narisi(13)
narisi(14)
narisi(15)
narisi(16)
narisi <- function(n) {
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(n)), ]
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
df_simple_n$day_color <- factor(df_simple_n$day_color)
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
g + geom_bar(stat="Identity", color="black") +
ylab("potrjeni primeri") +
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
scale_x_date(breaks=df_simple_n$date,
labels=df_simple_n$day_in_week,
minor_breaks="1 day") +
theme(axis.title.x = element_blank())
}
narisi(16)
narisi <- function(n) {
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(n)), ]
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
df_simple_n$day_color <- factor(df_simple_n$day_color)
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
g + geom_bar(stat="Identity", color="black") +
ylab("potrjeni primeri") +
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
scale_x_date(breaks=df_simple_n$date,
labels=df_simple_n$day_in_week,
minor_breaks="1 day") +
theme_bw() +
theme(axis.title.x = element_blank())
}
narisi(16)
narisi(20)
# Chunk 1
# set this option in the first code chunk in the document
knitr::opts_chunk$set(echo = params$printcode, results= params$printresults, warning = FALSE)
# Chunk 2
library(curl)
df_full <- read.csv(
curl("https://raw.githubusercontent.com/sledilnik/data/master/csv/stats.csv"))
library(tidyverse)
library(lubridate)
df_full <- tibble(df_full)
# Chunk 3
# select only required columns
df_simple <- select(df_full, date, tests.performed, cases.confirmed)
# convert dates from character to datetime and then to date (due to ggplot)
df_simple$date <- parse_date_time(df_simple$date, c("Ymd"))
df_simple$date <- as.Date(df_simple$date)
# add a column day_in_week which converts dates into numbers from 1-7
# 1 is Sunday, 2 is monday, ...
df_simple <- mutate(df_simple, day_in_week = wday(date))
# recode changes numerical values to what we want to have in the plot.
df_simple$day_in_week <- recode(df_simple$day_in_week,
`1` = "N",
`2` = "Po",
`3` = "T",
`4` = "Sr",
`5` = "C",
`6` = "P",
`7` = "S")
# adding a column for correct coloring in ggplot
df_simple <- mutate(df_simple, day_color = if_else(day_in_week == "N", 1, 0, NA_real_))
# a function for plotting n last days with data in cases.confirmed column
narisi <- function(n) {
# keeping rows which don't have NA values in cases.confirmed
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
if (tolower(n) == "all") {
n = nrow(df_simple_n)
}
# selectin n last rows (looking at dates)
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(n)), ]
# changing day_color into 2 (due to correct coloring) where cases.confirmed was
# maximum value.
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
# changing into factor due to ggplot2 taking that as input
df_simple_n$day_color <- factor(df_simple_n$day_color)
# correctly selecting data for ggplot
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
# adding barplot and outline as black color
g + geom_bar(stat="Identity", color="black") +
# add y label
ylab("potrjeni primeri") +
# define colors for factore (0, 1, 2) and remove legend
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
# change ticks from date to pre-defined labels
scale_x_date(breaks=df_simple_n$date,
labels=df_simple_n$day_in_week,
minor_breaks="1 day") +
# changing the theme (my favourite)
theme_bw() +
# removing x label as there isn't one in the instructions
theme(axis.title.x = element_blank())
}
narisi(10)
narisi(20)
# Chunk 1
# set this option in the first code chunk in the document
knitr::opts_chunk$set(echo = params$printcode, results= params$printresults, warning = FALSE)
# Chunk 2
library(curl)
df_full <- read.csv(
curl("https://raw.githubusercontent.com/sledilnik/data/master/csv/stats.csv"))
library(tidyverse)
library(lubridate)
df_full <- tibble(df_full)
# Chunk 3
# select only required columns
df_simple <- select(df_full, date, tests.performed, cases.confirmed)
# convert dates from character to datetime and then to date (due to ggplot)
df_simple$date <- parse_date_time(df_simple$date, c("Ymd"))
df_simple$date <- as.Date(df_simple$date)
# add a column day_in_week which converts dates into numbers from 1-7
# 1 is Sunday, 2 is monday, ...
df_simple <- mutate(df_simple, day_in_week = wday(date))
# recode changes numerical values to what we want to have in the plot.
df_simple$day_in_week <- recode(df_simple$day_in_week,
`1` = "N",
`2` = "Po",
`3` = "T",
`4` = "Sr",
`5` = "C",
`6` = "P",
`7` = "S")
# adding a column for correct coloring in ggplot
df_simple <- mutate(df_simple, day_color = if_else(day_in_week == "N", 1, 0, NA_real_))
# a function for plotting n last days with data in cases.confirmed column
narisi <- function(n) {
# keeping rows which don't have NA values in cases.confirmed
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
# selectin n last rows (looking at dates)
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(n)), ]
# changing day_color into 2 (due to correct coloring) where cases.confirmed was
# maximum value.
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
# changing into factor due to ggplot2 taking that as input
df_simple_n$day_color <- factor(df_simple_n$day_color)
# correctly selecting data for ggplot
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
# adding barplot and outline as black color
g + geom_bar(stat="Identity", color="black") +
# add y label
ylab("potrjeni primeri") +
# define colors for factore (0, 1, 2) and remove legend
scale_fill_manual(values=c("#bebebe", "#90ee90", "#ff0000"), guide=FALSE) +
# change ticks from date to pre-defined labels
scale_x_date(breaks=df_simple_n$date,
labels=df_simple_n$day_in_week,
minor_breaks="1 day") +
# changing the theme (my favourite)
theme_bw() +
# removing x label as there isn't one in the instructions
theme(axis.title.x = element_blank())
}
narisi(10)
narisi(20)
narisi(30)
narisi(40)
narisi(1)
narisi(2)
narisi(3)
narisi(4)
narisi(5)
narisi(0)
narisi(1)
df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(1)), ]
, !
# keeping rows which don't have NA values in cases.confirmed
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(n)), ]
df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(1)), ]
mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(1)), ]
df_simple_n
mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
# Chunk 1
# set this option in the first code chunk in the document
knitr::opts_chunk$set(echo = params$printcode, results= params$printresults, warning = FALSE)
# Chunk 2
library(curl)
df_full <- read.csv(
curl("https://raw.githubusercontent.com/sledilnik/data/master/csv/stats.csv"))
library(tidyverse)
library(lubridate)
df_full <- tibble(df_full)
# Chunk 3
# select only required columns
df_simple <- select(df_full, date, tests.performed, cases.confirmed)
# convert dates from character to datetime and then to date (due to ggplot)
df_simple$date <- parse_date_time(df_simple$date, c("Ymd"))
df_simple$date <- as.Date(df_simple$date)
# add a column day_in_week which converts dates into numbers from 1-7
# 1 is Sunday, 2 is monday, ...
df_simple <- mutate(df_simple, day_in_week = wday(date))
# recode changes numerical values to what we want to have in the plot.
df_simple$day_in_week <- recode(df_simple$day_in_week,
`1` = "N",
`2` = "Po",
`3` = "T",
`4` = "Sr",
`5` = "C",
`6` = "P",
`7` = "S")
# adding a column for correct coloring in ggplot
df_simple <- mutate(df_simple, day_color = if_else(day_in_week == "N", 1, 0, NA_real_))
# a function for plotting n last days with data in cases.confirmed column
narisi <- function(n) {
# keeping rows which don't have NA values in cases.confirmed
df_simple_n <- filter(df_simple, !is.na(cases.confirmed))
# selectin n last rows (looking at dates)
df_simple_n <- df_simple_n[df_simple_n$date > (max(df_simple_n$date) - ddays(n)), ]
# changing day_color into 2 (due to correct coloring) where cases.confirmed was
# maximum value.
df_simple_n <- mutate(df_simple_n,
day_color = if_else(cases.confirmed == max(cases.confirmed),
2,
day_color)
)
# changing into factor due to ggplot2 taking that as input
df_simple_n$day_color <- factor(df_simple_n$day_color)
# correctly selecting data for ggplot
g <- ggplot(df_simple_n, aes(x=date, y=cases.confirmed, fill=day_color))
# adding barplot and outline as black color
g + geom_bar(stat="Identity", color="black") +
# add y label
ylab("potrjeni primeri") +
# define colors for factore (0, 1, 2) and remove legend
scale_fill_manual(breaks=c(0, 1, 2),
values=c("#bebebe", "#90ee90", "#ff0000"),
guide=FALSE) +
# change ticks from date to pre-defined labels
scale_x_date(breaks=df_simple_n$date,
labels=df_simple_n$day_in_week,
minor_breaks="1 day") +
# changing the theme (my favourite)
theme_bw() +
# removing x label as there isn't one in the instructions
theme(axis.title.x = element_blank())
}
narisi(10)
narisi(20)
narisi(30)
narisi(40)
narisi(1)
narisi(2)
narisi(3)
narisi(4)
narisi(5)
