# Chunk 1
# set this option in the first code chunk in the document
knitr::opts_chunk$set(echo = params$printcode, results= params$printresults, warning = FALSE)
# Chunk 2
library(curl)
df_full <- read.csv(
curl("https://raw.githubusercontent.com/sledilnik/data/master/csv/stats.csv"))
library(tidyverse)
library(lubridate)
df_full <- tibble(df_full)
# select only required columns
df_simple <- select(df_full, date, tests.performed, cases.confirmed)
# convert dates from character to datetime and then to date (due to ggplot)
df_simple$date <- parse_date_time(df_simple$date, c("Ymd"))
df_simple$date <- as.Date(df_simple$date)
# add a column day_in_week which converts dates into numbers from 1-7
# 1 is Sunday, 2 is monday, ...
df_simple <- mutate(df_simple, day_in_week = wday(date))
# recode changes numerical values to what we want to have in the plot.
df_simple$day_in_week <- recode(df_simple$day_in_week,
`1` = "Nedelja",
`2` = "Ponedeljek",
`3` = "Torek",
`4` = "Sreda",
`5` = "Cetrtek",
`6` = "Petek",
`7` = "Sobota")
# adding a column for correct coloring in ggplot
df_simple <- mutate(df_simple, relative_conf_perf = cases.confirmed / tests.performed)
View(df_simple)
df_simple <- filter(df_simple, date > as.Date("2020-03-04", format="%Y-%m-%d"))
View(df_simple)
week(df_simple$date)
# select only required columns
df_simple <- select(df_full, date, tests.performed, cases.confirmed)
# convert dates from character to datetime and then to date (due to ggplot)
df_simple$date <- parse_date_time(df_simple$date, c("Ymd"))
df_simple$date <- as.Date(df_simple$date)
# add a column day_in_week which converts dates into numbers from 1-7
# 1 is Sunday, 2 is monday, ...
df_simple <- mutate(df_simple, day_in_week = wday(date))
# recode changes numerical values to what we want to have in the plot.
df_simple$day_in_week <- recode(df_simple$day_in_week,
`1` = "Nedelja",
`2` = "Ponedeljek",
`3` = "Torek",
`4` = "Sreda",
`5` = "Cetrtek",
`6` = "Petek",
`7` = "Sobota")
# adding a column for correct coloring in ggplot
df_simple <- df_simple %>%
mutate(relative_conf_perf = cases.confirmed / tests.performed) %>%
filter(df_simple, date > as.Date("2020-03-04", format="%Y-%m-%d")) %>%
mutate(week= week(date)- min(week(date)))
df_simple <- select(df_full, date, tests.performed, cases.confirmed)
# convert dates from character to datetime and then to date (due to ggplot)
df_simple$date <- parse_date_time(df_simple$date, c("Ymd"))
df_simple$date <- as.Date(df_simple$date)
# add a column day_in_week which converts dates into numbers from 1-7
# 1 is Sunday, 2 is monday, ...
df_simple <- mutate(df_simple, day_in_week = wday(date))
# recode changes numerical values to what we want to have in the plot.
df_simple$day_in_week <- recode(df_simple$day_in_week,
`1` = "Nedelja",
`2` = "Ponedeljek",
`3` = "Torek",
`4` = "Sreda",
`5` = "Cetrtek",
`6` = "Petek",
`7` = "Sobota")
# adding a column for correct coloring in ggplot
df_simple <- df_simple %>%
mutate(relative_conf_perf = cases.confirmed / tests.performed) %>%
filter(df_simple, date > as.Date("2020-03-04", format="%Y-%m-%d"))
df_simple <- select(df_full, date, tests.performed, cases.confirmed)
# convert dates from character to datetime and then to date (due to ggplot)
df_simple$date <- parse_date_time(df_simple$date, c("Ymd"))
df_simple$date <- as.Date(df_simple$date)
# add a column day_in_week which converts dates into numbers from 1-7
# 1 is Sunday, 2 is monday, ...
df_simple <- mutate(df_simple, day_in_week = wday(date))
# recode changes numerical values to what we want to have in the plot.
df_simple$day_in_week <- recode(df_simple$day_in_week,
`1` = "Nedelja",
`2` = "Ponedeljek",
`3` = "Torek",
`4` = "Sreda",
`5` = "Cetrtek",
`6` = "Petek",
`7` = "Sobota")
# adding a column for correct coloring in ggplot
df_simple <- df_simple %>%
mutate(relative_conf_perf = cases.confirmed / tests.performed)
# select only required columns
df_simple <- select(df_full, date, tests.performed, cases.confirmed)
# convert dates from character to datetime and then to date (due to ggplot)
df_simple$date <- parse_date_time(df_simple$date, c("Ymd"))
df_simple$date <- as.Date(df_simple$date)
# add a column day_in_week which converts dates into numbers from 1-7
# 1 is Sunday, 2 is monday, ...
df_simple <- mutate(df_simple, day_in_week = wday(date))
# recode changes numerical values to what we want to have in the plot.
df_simple$day_in_week <- recode(df_simple$day_in_week,
`1` = "Nedelja",
`2` = "Ponedeljek",
`3` = "Torek",
`4` = "Sreda",
`5` = "Cetrtek",
`6` = "Petek",
`7` = "Sobota")
# adding a column for correct coloring in ggplot
df_simple <- df_simple %>%
mutate(relative_conf_perf = cases.confirmed / tests.performed) %>%
filter(date > as.Date("2020-03-04", format="%Y-%m-%d")) %>%
mutate(week= week(date)- min(week(date)))
View(df_simple)
fw <- ggplot(df_simple, aes(x=week, y=relative_conf_perf)) + geom_point()
fw + facet_wrap(vars(day_in_week))
fw <- ggplot(df_simple, aes(x=week, y=relative_conf_perf)) +
geom_point() +
geom_smooth()
fw + facet_wrap(vars(day_in_week))
df_simple
df_simple$day_in_week <- factor(df_simple$day_in_week,
levels=c("Ponedeljek",
"Torek",
"Sreda",
"Cetrtek",
"Petek",
"Sobota",
"Nedelja"),
labels=c("Ponedeljek",
"Torek",
"Sreda",
"Cetrtek",
"Petek",
"Sobota",
"Nedelja")
)
fw <- ggplot(df_simple, aes(x=week, y=relative_conf_perf)) +
geom_point() +
geom_smooth()
fw + facet_wrap(vars(day_in_week))
?recode
fw <- ggplot(df_simple, aes(x=week, y=relative_conf_perf)) +
geom_point() +
geom_smooth() +
ylab("delez okuzenih izmed testiranih") +
xlab("teden")
fw + facet_wrap(vars(day_in_week))
g <- ggplot(df_simple, aes(x=week, y=relative_conf_perf, color=day_in_week)) +
geom_point() +
geom_smooth() +
ylab("delez okuzenih izmed testiranih") +
xlab("teden")
g + xlab("teden")
g <- ggplot(df_simple, aes(x=week, y=relative_conf_perf, color=day_in_week)) +
geom_point() +
geom_smooth(alpha=0.5)
g + xlab("teden") +
ylab("delez okuzenih izmed testiranih")
g <- ggplot(df_simple, aes(x=week, y=relative_conf_perf, color=day_in_week)) +
geom_point() +
geom_smooth(alpha=0.2)
g + xlab("teden") +
ylab("delez okuzenih izmed testiranih")
g <- ggplot(df_simple, aes(x=week, y=relative_conf_perf, color=day_in_week)) +
geom_point() +
geom_smooth(alpha=0.1)
g + xlab("teden") +
ylab("delez okuzenih izmed testiranih")
g <- ggplot(df_simple, aes(x=week, y=relative_conf_perf, color=day_in_week)) +
geom_point() +
geom_smooth(alpha=0.1)
g + labs(x="teden", y="delez okuzenih izmed testiranih", color="dan v tednu")
