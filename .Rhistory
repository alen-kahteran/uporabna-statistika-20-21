require(tidyverse)
require(lubridate)
knitr::opts_chunk$set(echo = params$printcode, results= params$printresults, warning = FALSE)
# Chunk 1: setup
require(tidyverse)
require(lubridate)
knitr::opts_chunk$set(echo = params$printcode, results= params$printresults, warning = FALSE)
# Chunk 2
vpis_st <- "64200421"
vsota_stevk <- sapply(strsplit(vpis_st, ""), function(x) sum(as.numeric(x)))
vsota_stevk
# Chunk 3
# izmisljene meritve
mer5 <- c(10,10,20,25,30)
# povprecje
mean(mer5)
# mediana
median(mer5)
# funkcija za izracun modusa
get_modus <- function(vec) {
uniqvec <- unique(vec)
uniqvec[which.max(tabulate(match(vec, uniqvec)))]
}
# modus
get_modus(mer5)
# preberemo podatke
data_full <- read.table("Ankete1011.txt", sep="\t", header=TRUE)
# spremenimo v tibble (zato je potreben Tidyverse paket)
data_full <- tibble(data_full)
data_full
# pravilno spremenimo zapis datumov v datetime objekt
data_full$Timestamp <- parse_date_time(data_full$Timestamp, c("dmY HM", "mdY HMS"))
data_full$Spol[data_full$Spol == "zenski"] <- "F"
data_full$Spol[data_full$Spol == "moski"] <- "M"
data_full$Visina <- as.numeric(gsub(",", ".", data_full$Visina))
data_full$Teza <- as.numeric(gsub(",", ".", data_full$Teza))
data_full$Cevelj <- as.numeric(gsub(",", ".", data_full$Cevelj))
data_full$Kajenje[data_full$Kajenje == "ne"] <- "N"
data_full$Kajenje[data_full$Kajenje == "da"] <- "Y"
data_full$Kajenje_koliko <- as.numeric(data_full$Kajenje_koliko)
data_full$Igrice[data_full$Igrice == "ne"] <- "N"
data_full$Igrice[data_full$Igrice == "da"] <- "Y"
data_full$Televizija <- as.numeric(gsub(",", ".", data_full$Televizija))
data_full$Knjige <- as.numeric(gsub(",", ".", data_full$Knjige))
data_full$Sport <- as.numeric(gsub(",", ".", data_full$Sport))
# preverjanje vseh unikatnih zapisov v spremenljivki Domace_zivali
unique(unlist(strsplit(data_full$Domace_zivali, ", ")))
# dodajanje novih stolpcev kjer bodo logicne vrednosti "Y" ali "N" glede
# ali ima nekdo doloceno zival ali ne, poleg tega se spremenljivka Domace_zivali
# spremeni v logicno vrednost "Y" ali "N", kjer ce ima vsaj eno zival ima "Y" drugace "N"
data_full <- data_full %>%
mutate(Macka=NA,
Ptic=NA,
Pes=NA,
Glodalec=NA,
Riba=NA,
Drugo=NA) %>%
mutate(Domace_zivali_temp = Domace_zivali) %>%
mutate(Domace_zivali = if_else(Domace_zivali == "Ne", "N", "Y"))
data_full <- data_full %>%
mutate(., Macka    = if_else(str_detect(.$Domace_zivali_temp, "Macka"),   "Y", "N")) %>%
mutate(., Ptic     = if_else(str_detect(.$Domace_zivali_temp, "Ptic"),    "Y", "N")) %>%
mutate(., Pes      = if_else(str_detect(.$Domace_zivali_temp, "Pes"),     "Y", "N")) %>%
mutate(., Glodalec = if_else(str_detect(.$Domace_zivali_temp, "Godalec"), "Y", "N")) %>%
mutate(., Riba     = if_else(str_detect(.$Domace_zivali_temp, "Riba"),    "Y", "N")) %>%
mutate(., Drugo    = if_else(str_detect(.$Domace_zivali_temp, "Drugo"),   "Y", "N")) %>%
select(-Domace_zivali_temp)
# Preverjanje vrstic ce kateri stolpec nima zapisa
print(data_full[rowSums(is.na(data_full)) > 0, ], width=Inf)
# nadomescanje manjkajocih vrednosti z mediano
data_full$Knjige[is.na(data_full$Knjige)] <- median(data_full$Knjige, na.rm=TRUE)
print(data_full, width=Inf)
# nastavimo seme
set.seed(19)
data_40 <- sample_n(data_full, 40)
View(data_40)
male_num <- nrow(data_40[data_40$Spol == "M", ])
total_num <- nrow(data_40)
print(male_num / total_num)
g <- ggplot(data_40, aes(Spol))
g + geom_bar() + ylab("Število oseb")
g <- ggplot(data_40, aes(Fakulteta))
g + geom_bar(aes(fill = Spol)) + ylab("Število oseb")
b <- ggplot(data_40, aes(x=Spol, y=Internet))
b + geom_boxplot() + ylab("Uporaba interneta [h]")
# 0 predstavlja minimum, 1 maximum. 0.25 spodnji kvartil, 0.5 je mediana, 0.75 zgornji kvartil
# type+4 pri izracunu uporabi linearno interpolacijo, ce to potrebuje.
quantile(data_40$Internet[data_40$Spol == "M"], probs=c(0, 0.25, 0.5, 0.75, 1), type=4)
quantile(data_40$Internet[data_40$Spol == "F"], probs=c(0, 0.25, 0.5, 0.75, 1), type=4)
# lahko preverimo
min(data_40$Internet[data_40$Spol == "M"])
max(data_40$Internet[data_40$Spol == "M"])
median(data_40$Internet[data_40$Spol == "M"])
min(data_40$Internet[data_40$Spol == "F"])
max(data_40$Internet[data_40$Spol == "F"])
median(data_40$Internet[data_40$Spol == "F"])
IQR(data_40$Internet[data_40$Spol == "M"])
IQR(data_40$Internet[data_40$Spol == "F"])
f_meja <- 22 + 15.5*1.5
m_meja <- 22 + 17*1.5
f_meja
m_meja
max(data_40[(data_40$Internet <= m_meja) & (data_40$Spol == "M"), ]$Internet)
max(data_40[(data_40$Internet <= m_meja) & (data_40$Spol == "F"), ]$Internet)
# izberimo podatke le za moške
data_40 <- data_40 %>% mutate(diff_TV_Int = Televizija - Internet)
data_40_m <- data_40[data_40$Spol == "M", ]
# histogram
h <- ggplot(data_40_m, aes(diff_TV_Int))
h + geom_histogram(bins=15) +
ylab("Število oseb") +
xlab("Razlika v času gledanja TVja in času preživetega na internetu [h]")
# srednje vrednosti
mean(data_40_m$diff_TV_Int)
median(data_40_m$diff_TV_Int)
get_modus(data_40_m$diff_TV_Int)
# mere razprsenosti
IQR(data_40_m$diff_TV_Int) # interkvartilna razlika
sd(data_40_m$diff_TV_Int) # standardni odklon
var(data_40_m$diff_TV_Int) # varianca
mad(data_40_m$diff_TV_Int) # povprecni absolutni odklon
# da preverimo katera je najbolj pogosta barva oci
table(data_40$BarvaOci) # rjava
data_vet_dent <- data_40 %>%
filter(BarvaOci == "rjava" &
Studij %in% c("Dentalna medicina", "Veterina"))
# srednje vrednosti
mean(data_vet_dent$Internet)
median(data_vet_dent$Internet)
get_modus(data_vet_dent$Internet)
# mere razprsenosti
IQR(data_vet_dent$Internet) # interkvartilna razlika
sd(data_vet_dent$Internet) # standardni odklon
var(data_vet_dent$Internet) # varianca
mad(data_vet_dent$Internet) # povprecni absolutni odklon
10+10+20+25+30
95/5
10+10+20+26+29
setwd(.._)
setwd(../)
setwd("../")
setwd("../")
