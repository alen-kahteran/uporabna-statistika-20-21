geom_vline(data=lwr_upr_hyp,
aes(xintercept=`97.5%`, color="red"),
linetype="longdash") +
geom_vline(data=mean_hyp,
aes(xintercept=med_hyp_value, color="blue")) + # as this is second it's red
facet_wrap(~vars_,
scales="free",
ncol=2,
labeller=label_parsed) +
geom_bar(data = subset(hyper_data, vars_=="nu[0]"),
width=0.3) +
labs(x="Vrednost parametra",
y="Gostota",
title=expression(paste("Grafi gostote za preostale parametre s 95% intervalom zaupanja")),
subtitle="Modri črti - interval zaupanja;
Rdeča črta - povprečje") +
theme(legend.position="none")
lwr_upr_mu <- lwr_upr_mu %>%
ungroup() %>%
mutate("(hiper)parameter"=paste0("$\\mu_{", group, "}$")) %>%
select(`(hiper)parameter`, `2.5%`, `97.5%`)
lwr_upr_sig <- lwr_upr_sig %>%
ungroup() %>%
mutate("(hiper)parameter"=paste0("$\\sigma_{", group, "}^2$")) %>%
select(`(hiper)parameter`, `2.5%`, `97.5%`)
lwr_upr_hyp <- lwr_upr_hyp %>%
ungroup() %>%
select(vars_, `2.5%`, `97.5%`) %>%
rename(`(hiper)parameter`=vars_)
mean_mu <- mean_mu %>%
ungroup() %>%
mutate("(hiper)parameter"=paste0("$\\mu_{", group, "}$")) %>%
select(`(hiper)parameter`, med_mu_value) %>%
rename(Mediana=med_mu_value)
mean_sig <- mean_sig %>%
ungroup() %>%
mutate("(hiper)parameter"=paste0("$\\sigma_{", group, "}^2$")) %>%
select(`(hiper)parameter`, med_sig_value) %>%
rename(Mediana=med_sig_value)
mean_hyp <- mean_hyp %>%
ungroup() %>%
select(vars_, med_hyp_value) %>%
rename(`(hiper)parameter`=vars_,
Mediana=med_hyp_value)
mu_tbl <- left_join(lwr_upr_mu, mean_mu, by=c("(hiper)parameter")) %>%
select(`(hiper)parameter`, `2.5%`, Mediana, `97.5%`)
sig_tbl <- left_join(lwr_upr_sig, mean_sig, by=c("(hiper)parameter")) %>%
select(`(hiper)parameter`, `2.5%`, Mediana, `97.5%`)
hyp_tbl <- left_join(lwr_upr_hyp, mean_hyp, by=c("(hiper)parameter")) %>%
select(`(hiper)parameter`, `2.5%`, Mediana, `97.5%`)
hyp_tbl$`(hiper)parameter` <- c("$\\mu$", "$\\sigma_0^2$", "$\\eta^2$", "$\\nu_0$")
kable(rbind(mu_tbl, sig_tbl, hyp_tbl),
align="c",
digits=2) %>%
kable_styling(full_width = FALSE)
pod.sole$EmuGroups =colMeans(muGroups.all)
par(mfrow=c(1,2))
plot(pod.sole$povprecje, pod.sole$EmuGroups,xlab ="vzorcno povprecje",ylab=expression(E(mu_j)))
abline(a=0,b=1)
plot(pod.sole$n, pod.sole$povprecje-pod.sole$EmuGroups,xlab ="velikost vzorca sole",ylab =expression(paste("vzorcno povprecje - ","",E(mu_j),sep="")))
abline(h=0)
plot(pod.sole$povprecje, pod.sole$EmuGroups,xlab ="vzorcna varianca",ylab=expression(E(mu_j)))
pod.sole$Esigma2Groups =colMeans(sigma2Groups.all)
par(mfrow=c(1,2))
plot(pod.sole$povprecje, pod.sole$EmuGroups,xlab ="vzorcna varianca",ylab=expression(E(mu_j)))
abline(a=0,b=1)
plot(pod.sole$n, pod.sole$povprecje-pod.sole$EmuGroups,xlab ="velikost vzorca sole",ylab =expression(paste("vzorcno povprecje - ","",E(mu_j),sep="")))
abline(h=0)
View(pod.sole)
pod.sole$EmuGroups <- colMeans(muGroups.all)
pod.sole$Esigma2Groups <- colMeans(sigma2Groups.all)
par(mfrow=c(1,2))
plot(pod.sole$povprecje, pod.sole$EmuGroups,xlab ="vzorcno povprecje",ylab=expression(E(mu_j)))
abline(a=0,b=1)
plot(pod.sole$n, pod.sole$povprecje-pod.sole$EmuGroups,xlab ="velikost vzorca sole",ylab =expression(paste("vzorcno povprecje - ","",E(mu_j),sep="")))
abline(h=0)
par(mfrow=c(1,2))
plot(pod.sole$varianca,
pod.sole$Esigma2Groups,
xlab="vzorcna varianca",
ylab=expression(E(sigma[j]^2)))
abline(a=0,
b=1)
plot(pod.sole$n,
pod.sole$varianca-pod.sole$Esigma2Groups,
xlab ="velikost vzorca sole",ylab =expression(paste("vzorcna varianca - ","",E(sigma[j]^2),sep="")))
abline(h=0)
?geom_line
?geom_abline
ggplot(NULL, aes(x=pod.sole$povprecje, y=pod.sole$EmuGroups)) +
geom_point() +
geom_abline(0, 1)
ggplot(NULL, aes(x=pod.sole$povprecje, y=pod.sole$EmuGroups)) +
geom_point() +
geom_abline(intercept=0, slope=1)
ggplot(NULL, aes(x=pod.sole$varianca, y=pod.sole$Esigma2Groups)) +
geom_point() +
geom_abline(intercept=0, slope=1)
ggplot(NULL, aes(x=pod.sole$n, y=pod.sole$povprecje-pod.sole$EmuGroups)) +
geom_point() +
geom_abline(intercept=0)
ggplot(NULL, aes(x=pod.sole$n, y=pod.sole$povprecje-pod.sole$EmuGroups)) +
geom_point() +
geom_hline(yintercept=0)
ggplot(NULL, aes(x=pod.sole$n, y=pod.sole$varianca-pod.sole$Esigma2Groups)) +
geom_point() +
geom_hline(yintercept=0)
ggplot(NULL, aes(x=pod.sole$povprecje, y=pod.sole$EmuGroups)) +
geom_point() +
geom_abline(intercept=0, slope=1)
ggplot(NULL, aes(x=pod.sole$povprecje, y=pod.sole$EmuGroups)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x=expression(hat(x)))
ggplot(NULL, aes(x=pod.sole$povprecje, y=pod.sole$EmuGroups)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x=expression(bar(x)))
ggplot(NULL, aes(x=pod.sole$povprecje, y=pod.sole$EmuGroups)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x=expression(bar(x)),
y=expression(mu[j]))
ggplot(NULL, aes(x=pod.sole$povprecje, y=pod.sole$EmuGroups)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x=expression(bar(x)),
y=expression(E(mu[j])))
ggplot(NULL, aes(x=pod.sole$varianca, y=pod.sole$Esigma2Groups)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x=expression(bar(sigma^2)),
y=expression(E(mu[j])))
ggplot(NULL, aes(x=pod.sole$varianca, y=pod.sole$Esigma2Groups)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x=expression(s^2),
y=expression(E(mu[j])))
ggplot(NULL, aes(x=pod.sole$varianca, y=pod.sole$Esigma2Groups)) +
geom_point() +
geom_abline(intercept=0, slope=1) +
labs(x=expression(s^2),
y=expression(E(sigma[j]^2)))
ggplot(NULL, aes(x=pod.sole$n, y=pod.sole$povprecje-pod.sole$EmuGroups)) +
geom_point() +
geom_hline(yintercept=0) +
labs(x=expression(s^2),
y=expression(E(sigma[j]^2)))
ggplot(NULL, aes(x=pod.sole$n, y=pod.sole$povprecje-pod.sole$EmuGroups)) +
geom_point() +
geom_hline(yintercept=0) +
labs(x="Velikost vzorca šole",
y=expression(bar(x)-E(mu[j])))
ggplot(NULL, aes(x=pod.sole$n, y=pod.sole$varianca-pod.sole$Esigma2Groups)) +
geom_point() +
geom_hline(yintercept=0) +
labs(x="Velikost vzorca šole",
y=expression(s^2-E(sigma[j]^2)))
mu2  <- cbind(muGroups.all[, 2],  2,  1:n.iter)
mu8  <- cbind(muGroups.all[, 8],  8,  1:n.iter)
mu9  <- cbind(muGroups.all[, 9],  9,  1:n.iter)
mu42 <- cbind(muGroups.all[, 42], 42, 1:n.iter)
mu_data <- rbind(mu2, mu8, mu9, mu42)
mu_data <- data.frame(mu_data)
colnames(mu_data) <- c("mu", "group", "x")
ggplot(mu_data, aes(x=x, y=mu)) +
geom_line() +
facet_wrap(vars(group), ncol=2) +
labs(x="Indeks",
y=expression(mu[j]),
title=expression(paste("Trace plots za ", mu[j])),
subtitle="j = 2, 8, 9, 42")
mu2  <- cbind(muGroups.all[1:500, 2],  2,  1:500)
mu8  <- cbind(muGroups.all[1:500, 8],  8,  1:500)
mu9  <- cbind(muGroups.all[1:500, 9],  9,  1:500)
mu42 <- cbind(muGroups.all[1:500, 42], 42, 1:500)
mu_data_500 <- rbind(mu2, mu8, mu9, mu42)
mu_data_500 <- data.frame(mu_data_500)
colnames(mu_data_500) <- c("mu", "group", "x")
ggplot(mu_data_500, aes(x=x, y=mu)) +
geom_line() +
facet_wrap(vars(group), ncol=2) +
labs(x="Indeks",
y=expression(mu[j]),
title=expression(paste("Trace plots za ", mu[j])),
subtitle="j = 2, 8, 9, 42; Prvih 500 členov")
sig2  <- cbind(sigma2Groups.all[, 2],  2,  1:n.iter)
sig8  <- cbind(sigma2Groups.all[, 8],  8,  1:n.iter)
sig9  <- cbind(sigma2Groups.all[, 9],  9,  1:n.iter)
sig42 <- cbind(sigma2Groups.all[, 42], 42, 1:n.iter)
sig_data <- rbind(sig2, sig8, sig9, sig42)
sig_data <- data.frame(sig_data)
colnames(sig_data) <- c("sigma", "group", "x")
ggplot(sig_data, aes(x=x, y=sigma)) +
geom_line() +
facet_wrap(vars(group), ncol=2) +
labs(x="Indeks",
y=expression(sigma[j]^2),
title=expression(paste("Trace plots za ", sigma[j]^2)),
subtitle="j = 2, 8, 9, 42")
sig2  <- cbind(sigma2Groups.all[1:500, 2],  2,  1:500)
sig8  <- cbind(sigma2Groups.all[1:500, 8],  8,  1:500)
sig9  <- cbind(sigma2Groups.all[1:500, 9],  9,  1:500)
sig42 <- cbind(sigma2Groups.all[1:500, 42], 42, 1:500)
sig_data_500 <- rbind(sig2, sig8, sig9, sig42)
sig_data_500 <- data.frame(sig_data_500)
colnames(sig_data_500) <- c("sigma", "group", "x")
ggplot(sig_data_500, aes(x=x, y=sigma)) +
geom_line() +
facet_wrap(vars(group), ncol=2) +
labs(x="Indeks",
y=expression(sigma[j]^2),
title=expression(paste("Trace plots za ", sigma[j]^2)),
subtitle="j = 2, 8, 9, 42;
Prvih 500 členov")
sig2  <- cbind(sigma2Groups.all[1:500, 2],  2,  1:500)
sig8  <- cbind(sigma2Groups.all[1:500, 8],  8,  1:500)
sig9  <- cbind(sigma2Groups.all[1:500, 9],  9,  1:500)
sig42 <- cbind(sigma2Groups.all[1:500, 42], 42, 1:500)
sig_data_500 <- rbind(sig2, sig8, sig9, sig42)
sig_data_500 <- data.frame(sig_data_500)
colnames(sig_data_500) <- c("sigma", "group", "x")
ggplot(sig_data_500, aes(x=x, y=sigma)) +
geom_line() +
facet_wrap(vars(group), ncol=2) +
labs(x="Indeks",
y=expression(sigma[j]^2),
title=expression(paste("Trace plots za ", sigma[j]^2)),
subtitle="j = 2, 8, 9, 42;
Prvih 500 členov")
mu      <- cbind(mu.all,      1, 1:n.iter)
sigma20 <- cbind(sigma20.all, 2, 1:n.iter)
eta2    <- cbind(eta2.all,    3, 1:n.iter)
nu0     <- cbind(nu0.all,     4, 1:n.iter)
hyper_data <- rbind(mu, sigma20, eta2, nu0)
hyper_data <- data.frame(hyper_data)
colnames(hyper_data) <- c("value", "vars_", "x")
facet_names <- c(
`1` = expression(mu),
`2` = expression(sigma[0]^2),
`3` = expression(eta^2),
`4` = expression(nu[0])
)
hyper_data <- as_tibble(hyper_data %>% mutate_at(vars(c("value", "x")), as.double))
hyper_data <- mutate_at(hyper_data,
.vars="vars_",
.funs=factor,
labels = facet_names)
ggplot(hyper_data, aes(x=x, y=value)) +
geom_line() +
facet_wrap(~vars_,
scales="free_y",
ncol=2,
labeller=label_parsed) +
labs(x="Indeks",
y="Vrednost parametra",
title="Trace plots za ostale parametre")
mu      <- cbind(mu.all,      1, 1:n.iter)
sigma20 <- cbind(sigma20.all, 2, 1:n.iter)
eta2    <- cbind(eta2.all,    3, 1:n.iter)
nu0     <- cbind(nu0.all,     4, 1:n.iter)
hyper_data <- rbind(mu, sigma20, eta2, nu0)
hyper_data <- data.frame(hyper_data)
colnames(hyper_data) <- c("value", "vars_", "x")
facet_names <- c(
`1` = expression(mu),
`2` = expression(sigma[0]^2),
`3` = expression(eta^2),
`4` = expression(nu[0])
)
hyper_data <- as_tibble(hyper_data %>% mutate_at(vars(c("value", "x")), as.double))
hyper_data <- mutate_at(hyper_data,
.vars="vars_",
.funs=factor,
labels = facet_names)
ggplot(hyper_data, aes(x=x, y=value)) +
geom_line() +
facet_wrap(~vars_,
scales="free_y",
ncol=2,
labeller=label_parsed) +
labs(x="Indeks",
y="Vrednost parametra",
title="Trace plots za ostale parametre")
mu      <- cbind(mu.all[1:500],      1, 1:500)
sigma20 <- cbind(sigma20.all[1:500], 2, 1:500)
eta2    <- cbind(eta2.all[1:500],    3, 1:500)
nu0     <- cbind(nu0.all[1:500],     4, 1:500)
hyper_data_500 <- rbind(mu, sigma20, eta2, nu0)
hyper_data_500 <- data.frame(hyper_data_500)
colnames(hyper_data_500) <- c("value", "vars_", "x")
facet_names <- c(
`1` = expression(mu),
`2` = expression(sigma[0]^2),
`3` = expression(eta^2),
`4` = expression(nu[0])
)
hyper_data_500 <- as_tibble(hyper_data_500 %>% mutate_at(vars(c("value", "x")), as.double))
hyper_data_500 <- mutate_at(hyper_data_500,
.vars="vars_",
.funs=factor,
labels=facet_names)
ggplot(hyper_data_500, aes(x=x, y=value)) +
geom_line() +
facet_wrap(~vars_,
scales="free_y",
ncol=2,
labeller=label_parsed) +
labs(x="Indeks",
y="Vrednost parametra",
title="Trace plots za ostale parametre",
subtitle="Prvih 500 členov")
hyper_data <- mutate(hyper_data, podvzorec=factor(sort(rep(1:10, 4*n.iter/10))))
mu_data <- mutate(mu_data, podvzorec=factor(sort(rep(1:10, 4*n.iter/10))))
sig_data <- mutate(sig_data, podvzorec=factor(sort(rep(1:10, 4*n.iter/10))))
ggplot(mu_data, aes(x=podvzorec, y=mu)) +
geom_boxplot() +
facet_wrap(vars(group), ncol=2) +
labs(x="podvzorec",
y=expression(mu[j]),
title=expression(paste("Porazdelitve podvzorcev za ", mu[j])),
subtitle="j = 2, 8, 9, 42")
ggplot(sig_data, aes(x=podvzorec, y=sigma)) +
geom_boxplot() +
facet_wrap(vars(group), ncol=2) +
labs(x="podvzorec",
y=expression(sigma[j]^2),
title=expression(paste("Porazdelitve podvzorcev za ", sigma[j]^2)),
subtitle="j = 2, 8, 9, 42")
ggplot(hyper_data, aes(x=podvzorec, y=value)) +
geom_boxplot() +
facet_wrap(~vars_,
scales="free_y",
ncol=2,
labeller=label_parsed) +
labs(x="podvzorec",
y="Vrednost parametra",
title="Porazdelitve podvzorcev")
mu      <- cbind(mu.all,      1, 1:n.iter)
sigma20 <- cbind(sigma20.all, 2, 1:n.iter)
eta2    <- cbind(eta2.all,    3, 1:n.iter)
nu0     <- cbind(nu0.all,     4, 1:n.iter)
hyper_data <- rbind(mu, sigma20, eta2, nu0)
hyper_data <- data.frame(hyper_data)
colnames(hyper_data) <- c("value", "vars_", "x")
facet_names <- c(
`1` = expression(mu),
`2` = expression(sigma[0]^2),
`3` = expression(eta^2),
`4` = expression(nu[0])
)
hyper_data <- as_tibble(hyper_data %>% mutate_at(vars(c("value", "x")), as.double))
hyper_data <- mutate_at(hyper_data,
.vars="vars_",
.funs=factor,
labels = facet_names)
hyper_data
mutate(hyper_data, podvzorec=factor(sort(rep(1:10, 4*n.iter/10))))
print(mutate(hyper_data, podvzorec=factor(sort(rep(1:10, 4*n.iter/10)))),n=33)
rep(1:10, 4*n.iter/10)
sort(rep(1:10, 4*n.iter/10))
hyper_data <- mutate(hyper_data, podvzorec=factor(sort(rep(1:10, 4*n.iter/10))))
hyper_data
mu_data <- mutate(mu_data, podvzorec=factor(sort(rep(1:10, 4*n.iter/10))))
sig_data <- mutate(sig_data, podvzorec=factor(sort(rep(1:10, 4*n.iter/10))))
mu_data
sig_data <- mutate(sig_data, podvzorec=factor(sort(rep(1:10, 4*n.iter/10))))
sig_data
ggplot(mu_data, aes(x=podvzorec, y=mu)) +
geom_boxplot() +
facet_wrap(vars(group), ncol=2) +
labs(x="podvzorec",
y=expression(mu[j]),
title=expression(paste("Porazdelitve podvzorcev za ", mu[j])),
subtitle="j = 2, 8, 9, 42")
ggplot(mu_data, aes(x=podvzorec, y=mu)) +
geom_boxplot()
ggplot(mu_data, aes(x=podvzorec, y=mu, col=group)) +
geom_boxplot() +
facet_wrap(vars(group), ncol=2) +
labs(x="podvzorec",
y=expression(mu[j]),
title=expression(paste("Porazdelitve podvzorcev za ", mu[j])),
subtitle="j = 2, 8, 9, 42")
ggplot(mu_data %>% filter(group=2), aes(x=podvzorec, y=mu)) +
geom_boxplot() +
facet_wrap(vars(group), ncol=2) +
labs(x="podvzorec",
y=expression(mu[j]),
title=expression(paste("Porazdelitve podvzorcev za ", mu[j])),
subtitle="j = 2, 8, 9, 42")
ggplot(mu_data %>% filter(group==2), aes(x=podvzorec, y=mu)) +
geom_boxplot()
table(mu_data$podvzorec
)
mu_data <- mutate(mu_data, podvzorec=factor(sort(rep(1:10, n.iter/10))))
mu_data <- mutate(mu_data, podvzorec=rep(factor(sort(rep(1:10, n.iter/10))), 4))
ggplot(mu_data, aes(x=podvzorec, y=mu)) +
geom_boxplot() +
facet_wrap(vars(group), ncol=2) +
labs(x="podvzorec",
y=expression(mu[j]),
title=expression(paste("Porazdelitve podvzorcev za ", mu[j])),
subtitle="j = 2, 8, 9, 42")
mu_data <- mutate(mu_data, podvzorec=rep(factor(sort(rep(1:10, n.iter/10))), 4))
sig_data <- mutate(sig_data, podvzorec=rep(factor(sort(rep(1:10, 4*n.iter/10))), 4))
hyper_data <- mutate(hyper_data, podvzorec=rep(factor(sort(rep(1:10, 4*n.iter/10))), 4))
mu_data <- mutate(mu_data, podvzorec=rep(factor(sort(rep(1:10, n.iter/10))), 4))
sig_data <- mutate(sig_data, podvzorec=rep(factor(sort(rep(1:10, n.iter/10))), 4))
hyper_data <- mutate(hyper_data, podvzorec=rep(factor(sort(rep(1:10, n.iter/10))), 4))
ggplot(mu_data, aes(x=podvzorec, y=mu)) +
geom_boxplot() +
facet_wrap(vars(group), ncol=2) +
labs(x="podvzorec",
y=expression(mu[j]),
title=expression(paste("Porazdelitve podvzorcev za ", mu[j])),
subtitle="j = 2, 8, 9, 42")
ggplot(sig_data, aes(x=podvzorec, y=sigma)) +
geom_boxplot() +
facet_wrap(vars(group), ncol=2) +
labs(x="podvzorec",
y=expression(sigma[j]^2),
title=expression(paste("Porazdelitve podvzorcev za ", sigma[j]^2)),
subtitle="j = 2, 8, 9, 42")
ggplot(hyper_data, aes(x=podvzorec, y=value)) +
geom_boxplot() +
facet_wrap(~vars_,
scales="free_y",
ncol=2,
labeller=label_parsed) +
labs(x="podvzorec",
y="Vrednost parametra",
title="Porazdelitve podvzorcev")
mu_data <- mutate(mu_data, podvzorec=rep(factor(sort(rep(1:10, n.iter/10))), 4))
sig_data <- mutate(sig_data, podvzorec=rep(factor(sort(rep(1:10, n.iter/10))), 4))
hyper_data <- mutate(hyper_data, podvzorec=rep(factor(sort(rep(1:10, n.iter/10))), 4))
ggplot(mu_data, aes(x=podvzorec, y=mu)) +
geom_boxplot() +
facet_wrap(vars(group), ncol=2) +
labs(x="podvzorec",
y=expression(mu[j]),
title=expression(paste("Porazdelitve podvzorcev za ", mu[j])),
subtitle="j = 2, 8, 9, 42")
ggplot(sig_data, aes(x=podvzorec, y=sigma)) +
geom_boxplot() +
facet_wrap(vars(group), ncol=2) +
labs(x="podvzorec",
y=expression(sigma[j]^2),
title=expression(paste("Porazdelitve podvzorcev za ", sigma[j]^2)),
subtitle="j = 2, 8, 9, 42")
ggplot(hyper_data, aes(x=podvzorec, y=value)) +
geom_boxplot() +
facet_wrap(~vars_,
scales="free_y",
ncol=2,
labeller=label_parsed) +
labs(x="podvzorec",
y="Vrednost parametra",
title="Porazdelitve podvzorcev")
_grid.arrange
?grid.arrange
grid.arrange(smu1, smu2, ncol=2)
MCSE <- rbind(
MCSE <- rbind(
sd(muGroups.all[, 2])/sqrt(effectiveSize(muGroups.all[, 2])[[1]]),
sd(muGroups.all[, 8])/sqrt(effectiveSize(muGroups.all[, 8])[[1]]),
sd(muGroups.all[, 9])/sqrt(effectiveSize(muGroups.all[, 9])[[1]]),
sd(muGroups.all[, 92])/sqrt(effectiveSize(muGroups.all[, 42])[[1]]),
sd(sigma2Groups.all[, 2])/sqrt(effectiveSize(sigma2Groups.all[, 2])[[1]]),
sd(sigma2Groups.all[, 8])/sqrt(effectiveSize(sigma2Groups.all[, 8])[[1]]),
sd(sigma2Groups.all[, 9])/sqrt(effectiveSize(sigma2Groups.all[, 9])[[1]]),
sd(sigma2Groups.all[, 92])/sqrt(effectiveSize(sigma2Groups.all[, 42])[[1]]),
sd(mu.all[, 2])/sqrt(effectiveSize(mu.all)[[1]]),
sd(sigma20.all[, 2])/sqrt(effectiveSize(sigma20.all)[[1]]),
sd(eta2.all[, 2])/sqrt(effectiveSize(eta2.all)[[1]]),
sd(nu0.all[, 2])/sqrt(effectiveSize(nu0.all)[[1]])
)
sd(muGroups.all[, 2])/sqrt(effectiveSize(muGroups.all[, 2])[[1]])
sd(muGroups.all[, 8])/sqrt(effectiveSize(muGroups.all[, 8])[[1]])
MCSE <- rbind(
sd(muGroups.all[, 2])/sqrt(effectiveSize(muGroups.all[, 2])[[1]]),
sd(muGroups.all[, 8])/sqrt(effectiveSize(muGroups.all[, 8])[[1]]),
sd(muGroups.all[, 9])/sqrt(effectiveSize(muGroups.all[, 9])[[1]]),
sd(muGroups.all[, 92])/sqrt(effectiveSize(muGroups.all[, 42])[[1]]),
sd(sigma2Groups.all[, 2])/sqrt(effectiveSize(sigma2Groups.all[, 2])[[1]]),
sd(sigma2Groups.all[, 8])/sqrt(effectiveSize(sigma2Groups.all[, 8])[[1]]),
sd(sigma2Groups.all[, 9])/sqrt(effectiveSize(sigma2Groups.all[, 9])[[1]]),
sd(sigma2Groups.all[, 92])/sqrt(effectiveSize(sigma2Groups.all[, 42])[[1]]),
sd(mu.all[, 2])/sqrt(effectiveSize(mu.all)[[1]]),
sd(sigma20.all[, 2])/sqrt(effectiveSize(sigma20.all)[[1]]),
sd(eta2.all[, 2])/sqrt(effectiveSize(eta2.all)[[1]]),
sd(nu0.all[, 2])/sqrt(effectiveSize(nu0.all)[[1]]))
MCSE <- rbind(
sd(muGroups.all[, 2])/sqrt(effectiveSize(muGroups.all[, 2])[[1]]),
sd(muGroups.all[, 8])/sqrt(effectiveSize(muGroups.all[, 8])[[1]]),
sd(muGroups.all[, 9])/sqrt(effectiveSize(muGroups.all[, 9])[[1]]),
sd(muGroups.all[, 92])/sqrt(effectiveSize(muGroups.all[, 42])[[1]]),
sd(sigma2Groups.all[, 2])/sqrt(effectiveSize(sigma2Groups.all[, 2])[[1]]),
sd(sigma2Groups.all[, 8])/sqrt(effectiveSize(sigma2Groups.all[, 8])[[1]]),
sd(sigma2Groups.all[, 9])/sqrt(effectiveSize(sigma2Groups.all[, 9])[[1]]),
sd(sigma2Groups.all[, 92])/sqrt(effectiveSize(sigma2Groups.all[, 42])[[1]]),
sd(mu.all)/sqrt(effectiveSize(mu.all)[[1]]),
sd(sigma20.all)/sqrt(effectiveSize(sigma20.all)[[1]]),
sd(eta2.all)/sqrt(effectiveSize(eta2.all)[[1]]),
sd(nu0.all)/sqrt(effectiveSize(nu0.all)[[1]]))
MCSE
eff.smpl.data <- cbind(eff.smpl.param, eff.smpl.size, MCSE)
eff.smpl.data
colnames(eff.smpl.data) <- c("(hiper)parameter", "Effective sample size", "MCSE")
eff.smpl.data <- as_tibble(eff.smpl.data) %>% mutate_at("Effective sample size", "MCSE", as.double)
eff.smpl.data <- as_tibble(eff.smpl.data) %>% mutate_at(c("Effective sample size", "MCSE"), as.double)
eff.smpl.data
