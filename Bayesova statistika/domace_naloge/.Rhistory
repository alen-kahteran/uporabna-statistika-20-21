n <- 26
k <- 6
verjetje <- function(theta, k, n){
dbinom(k, size = n, prob = theta)
}
konst <- function(k, n){
theta <- seq(0.001, 1, 0.001)
1 / (0.001 * sum(verjetje(theta, k, n)))
}
theta <- seq(0, 1, 0.001)
konst.verjetje <- konst(k, n) * verjetje(theta, k, n)
plot_bin <- function(alpha, beta) {
alpha.apost <- k + alpha
beta.apost <- n - k + beta
theta <- seq(0.001, 1, 0.001)
aposteriorna <- dbeta(theta, alpha.apost, beta.apost)
konst.verjetje <- konst(k, n) * verjetje(theta, k, n)
apriorna <- dbeta(theta, alpha, beta)
y.max <- max(c(konst.verjetje, apriorna, aposteriorna))
plot(theta,
konst.verjetje,
ylim=c(0, y.max),
type = "l",
xlab = expression(theta),
ylab = "")
lines(theta, apriorna, col = "red")
lines(theta, aposteriorna, col = "green3")
legend("topright",
legend = c("verjetje", "apriorna","aposteriorna"),
col = c("black","red","green3"),
lty = 1,
bty = "n",
cex = 1.3)
}
plot_bin(1,1)
plot_bin(1,1)
plot_bin(1,2)
plot_bin(1,3)
plot_bin(1,10)
plot_bin(10,10)
plot_bin(10,0.2)
plot_bin(0.2,)
plot_bin(0.2,2)
plot_bin(0.2,0.2)
plot_bin(0.2,0.3)
plot_bin(0.2,0.4)
plot_bin(0.2,0.5)
plot_bin(0.2,0.6)
plot_bin(0.2,0.7)
plot_bin(0.2,0.8)
plot_bin(0.2,0.9)
plot_bin(0.2,1)
alpha <- 0.2
beta <- 0.9
a
alpha.apost <- k + alpha
beta.apost <- n - k + beta
theta <- seq(0.001, 1, 0.001)
aposteriorna <- dbeta(theta, alpha.apost, beta.apost)
aposteriorna
konst.verjetje <- konst(k, n) * verjetje(theta, k, n)
apriorna <- dbeta(theta, alpha, beta)
y.max <- max(c(konst.verjetje, apriorna, aposteriorna))
max(c(konst.verjetje, apriorna, aposteriorna))
is.infinite(konst.verjetje)
any(is.infinite(konst.verjetje))
any(is.infinite(apriorna))
any(is.infinite(aposteriorna))
apriorna
theta <- seq(0, 1, 0.001)
apriorna <- dbeta(theta, alpha, beta)
any(is.infinite(aposteriorna))
any(is.infinite(apriorna))
theta <- seq(0, 0.999, 0.001)
apriorna <- dbeta(theta, alpha, beta)
any(is.infinite(apriorna))
apriorna
theta <- seq(0.001, 0.999, 0.001)
aposteriorna <- dbeta(theta, alpha.apost, beta.apost)
konst.verjetje <- konst(k, n) * verjetje(theta, k, n)
apriorna <- dbeta(theta, alpha, beta)
plot_bin <- function(alpha, beta) {
alpha.apost <- k + alpha
beta.apost <- n - k + beta
theta <- seq(0.001, 0.999, 0.001)
aposteriorna <- dbeta(theta, alpha.apost, beta.apost)
konst.verjetje <- konst(k, n) * verjetje(theta, k, n)
apriorna <- dbeta(theta, alpha, beta)
y.max <- max(c(konst.verjetje, apriorna, aposteriorna))
plot(theta,
konst.verjetje,
ylim=c(0, y.max),
type = "l",
xlab = expression(theta),
ylab = "")
lines(theta, apriorna, col = "red")
lines(theta, aposteriorna, col = "green3")
legend("topright",
legend = c("verjetje", "apriorna","aposteriorna"),
col = c("black","red","green3"),
lty = 1,
bty = "n",
cex = 1.3)
}
plot_bin(0.2,0.2)
plot_bin(0.2,0.1)
plot_bin(0.1,0.1)
plot_bin(0.01,0.01)
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje))
# importing required library
library(tidyverse)
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje))
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje)) +
geom_line(aes(y=apriorna)) +
geom_line(aes(y=aposteriorna))
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje, col="black")) +
geom_line(aes(y=apriorna, col="red")) +
geom_line(aes(y=aposteriorna, col="green3"))
colors <- c("Verjetje" = "black", "Apriorna" = "red", "Aposteriorna" = "green3")
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje, col="Verjetje")) +
geom_line(aes(y=apriorna, col="Apriorna")) +
geom_line(aes(y=aposteriorna, col="Aposteriorna")) +
scale_color_manual(values = colors)
plot_bin(1,1)
colors <- c("Verjetje" = "black", "Apriorna" = "red", "Aposteriorna" = "green3")
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje, col="Verjetje")) +
geom_line(aes(y=apriorna, col="Apriorna")) +
geom_line(aes(y=aposteriorna, col="Aposteriorna")) +
scale_color_manual(values = colors) +
labs(x = expression(theta),
)
colors <- c("Verjetje" = "black", "Apriorna" = "red", "Aposteriorna" = "green3")
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje, col="Verjetje")) +
geom_line(aes(y=apriorna, col="Apriorna")) +
geom_line(aes(y=aposteriorna, col="Aposteriorna")) +
scale_color_manual(values = colors) +
labs(x = expression(theta)
)
?legend
colors <- c("Verjetje" = "black", "Apriorna" = "red", "Aposteriorna" = "green3")
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje, col="Verjetje")) +
geom_line(aes(y=apriorna, col="Apriorna")) +
geom_line(aes(y=aposteriorna, col="Aposteriorna")) +
scale_color_manual(values = colors) +
labs(x = expression(theta),
legend="Legenda")
colors <- c("Verjetje" = "black", "Apriorna" = "red", "Aposteriorna" = "green3")
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje, col="Verjetje")) +
geom_line(aes(y=apriorna, col="Apriorna")) +
geom_line(aes(y=aposteriorna, col="Aposteriorna")) +
scale_color_manual(values = colors) +
labs(x = expression(theta),
color = "Legenda")
colors <- c("Verjetje" = "black", "Apriorna" = "red", "Aposteriorna" = "green3")
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje, col="Verjetje")) +
geom_line(aes(y=apriorna, col="Apriorna")) +
geom_line(aes(y=aposteriorna, col="Aposteriorna")) +
scale_color_manual(values = colors) +
labs(x = expression(theta),
color = "Legenda") +
theme(axis.text.y = element_blank())
colors <- c("Verjetje" = "black", "Apriorna" = "red", "Aposteriorna" = "green3")
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje, col="Verjetje")) +
geom_line(aes(y=apriorna, col="Apriorna")) +
geom_line(aes(y=aposteriorna, col="Aposteriorna")) +
scale_color_manual(values = colors) +
labs(x = expression(theta),
color = "Legenda",
y=NA)
colors <- c("Verjetje" = "black", "Apriorna" = "red", "Aposteriorna" = "green3")
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje, col="Verjetje")) +
geom_line(aes(y=apriorna, col="Apriorna")) +
geom_line(aes(y=aposteriorna, col="Aposteriorna")) +
scale_color_manual(values = colors) +
labs(x = expression(theta),
color = "Legenda") +
theme(axis.title.y=element_blank())
colors <- c("Verjetje" = "black", "Apriorna" = "red", "Aposteriorna" = "green3")
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje, col="Verjetje")) +
geom_line(aes(y=apriorna, col="Apriorna")) +
geom_line(aes(y=aposteriorna, col="Aposteriorna")) +
scale_color_manual(values = colors) +
labs(x = expression(theta),
color = "Legenda") +
theme_minimal() +
theme(axis.title.y=element_blank())
plot_bin <- function(alpha, beta) {
# calculate alpha and beta posterior
alpha.apost <- k + alpha
beta.apost <- n - k + beta
# generate theta values and calculate posterier, prior and likelihood
theta <- seq(0, 1, 0.001)
aposteriorna <- dbeta(theta, alpha.apost, beta.apost)
konst.verjetje <- konst(k, n) * verjetje(theta, k, n)
apriorna <- dbeta(theta, alpha, beta)
# just getting max value for proper plotting
y.max <- max(c(konst.verjetje, aposteriorna))
# plotting likelihood
plot(theta,
konst.verjetje,
ylim=c(0, y.max),
type = "l",
xlab = expression(theta),
ylab = "")
# plotting prior
lines(theta, apriorna, col = "red")
# plotting posterior
lines(theta, aposteriorna, col = "green3")
# just adding legend
legend("topright",
legend = c("verjetje", "apriorna","aposteriorna"),
col = c("black","red","green3"),
lty = 1,
bty = "n",
cex = 1.3)
}
plot_bin(0.2,0.2)
plot_bin <- function(alpha, beta) {
# calculate alpha and beta posterior
alpha.apost <- k + alpha
beta.apost <- n - k + beta
# generate theta values and calculate posterier, prior and likelihood
theta <- seq(0, 1, 0.001)
aposteriorna <- dbeta(theta, alpha.apost, beta.apost)
konst.verjetje <- konst(k, n) * verjetje(theta, k, n)
apriorna <- dbeta(theta, alpha, beta)
# just getting max value for proper plotting
y.max <- max(c(konst.verjetje, aposteriorna))
# defining colors
colors <- c("Verjetje" = "black", "Apriorna" = "red", "Aposteriorna" = "green3")
# plotting likelihood, prior and posterior distributions.
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje, col="Verjetje")) +
geom_line(aes(y=apriorna, col="Apriorna")) +
geom_line(aes(y=aposteriorna, col="Aposteriorna")) +
scale_color_manual(values = colors) +
labs(x = expression(theta),
color = "Legenda") +
theme_minimal() +
theme(axis.title.y=element_blank()) +
ylim(c(0,y.max))
}
plot_bin(0.2,0.2)
plot_bin(0.2,0.7)
plot_bin(0.2,8)
plot_bin(0.2,88)
plot_bin <- function(alpha, beta) {
# calculate alpha and beta posterior
alpha.apost <- k + alpha
beta.apost <- n - k + beta
# generate theta values and calculate posterier, prior and likelihood
theta <- seq(0, 1, 0.001)
aposteriorna <- dbeta(theta, alpha.apost, beta.apost)
konst.verjetje <- konst(k, n) * verjetje(theta, k, n)
apriorna <- dbeta(theta, alpha, beta)
# just getting max value for proper plotting
y.max <- max(c(konst.verjetje, aposteriorna))
# defining colors
colors <- c("Verjetje" = "black",
"Apriorna" = "red",
"Aposteriorna" = "green3")
# plotting likelihood, prior and posterior distributions.
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje, col="Verjetje")) +
geom_line(aes(y=apriorna, col="Apriorna")) +
geom_line(aes(y=aposteriorna, col="Aposteriorna")) +
scale_color_manual(values = colors) +
labs(x=expression(theta),
color="Legenda",
title=paste0("Apriorna porazdelitev Beta(", alpha, ", ", beta, ")")) +
theme_minimal() +
theme(axis.title.y=element_blank()) +
ylim(c(0, y.max))
}
plot_bin <- function(alpha, beta) {
# calculate alpha and beta posterior
alpha.apost <- k + alpha
beta.apost <- n - k + beta
# generate theta values and calculate posterier, prior and likelihood
theta <- seq(0, 1, 0.001)
aposteriorna <- dbeta(theta, alpha.apost, beta.apost)
konst.verjetje <- konst(k, n) * verjetje(theta, k, n)
apriorna <- dbeta(theta, alpha, beta)
# just getting max value for proper plotting
y.max <- max(c(konst.verjetje, aposteriorna))
# defining colors
colors <- c("Verjetje" = "black",
"Apriorna" = "red",
"Aposteriorna" = "green3")
# plotting likelihood, prior and posterior distributions.
ggplot(NULL, aes(x=theta)) +
geom_line(aes(y=konst.verjetje, col="Verjetje")) +
geom_line(aes(y=apriorna, col="Apriorna")) +
geom_line(aes(y=aposteriorna, col="Aposteriorna")) +
scale_color_manual(values = colors) +
labs(x=expression(theta),
color="Legenda",
title=paste0("Apriorna porazdelitev Beta(", alpha, ", ", beta, ")")) +
theme_minimal() +
theme(axis.title.y=element_blank()) +
ylim(c(0, y.max))
}
plot_bin(0.2, 0.2)
max(aposteriorna)
16*3
64*3
128*3
256*3
